#pragma once

// Generated by mamec
//   Format Version: 0
//   First Code      : '.' (0x2E)
//   Last Code       : 'F' (0x46)
//   Max Glyph Width : 30 px
//   Font Height     : 40 px
//   Total Pixels    : 19480 px
//   Fragment Shape  : Horizontal
//   Pixel Order     : Near Pixel First
//   Pixel Format    : 2 bpp
//   Large Font      : Yes
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :   12 Bytes
//     Glyph Table   :  100 Bytes (  4.00 Bytes/glyph)
//     Frag. Table   :    8 Bytes ( 12.50% used)
//     Byte Codes    :  753 Bytes ( 30.12 Bytes/glyph)
//     Total         :  873 Bytes ( 34.92 Bytes/glyph)
//   Instruction Performance:
//     CPX   : 2168 -->  135 (-42.50%)
//     CPY   :  482 -->   97 (- 8.05%)
//     LUD   :   36 -->   18 (- 0.38%)
//     LUP   :  106 -->  106 (  0.00%)
//     RPT   : 1271 -->  165 (-23.12%)
//     SFI   :  471 -->  118 (- 7.38%)
//     SFT   :  220 -->   81 (- 2.91%)
//     XOR   :   30 -->   30 (  0.00%)
//     Total : 4784 -->  750 (-84.32%)
//   Byte Code References:
//     Multiple References :   0 Bytes
//     No Ref (ABO)        :   3 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency: 22.314 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t MameSeg7_s40c38w06g02_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x00, 0x16, 0x2E, 0x46, 0x1D, 0x27, 0x20, 0x08, 0x00, 0x10, 0x25, 0x03,
  // Glyph Table
  0x00, 0x40, 0x06, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x80, 0x1D, 0x00, 0x34, 0x80, 0x1D, 0x00,
  0x54, 0x80, 0x1D, 0x00, 0x7C, 0x80, 0x1D, 0x00, 0xB2, 0x80, 0x1D, 0x00, 0xDC, 0x80, 0x1D, 0x00,
  0x02, 0x81, 0x1D, 0x00, 0x34, 0x81, 0x1D, 0x00, 0x66, 0x81, 0x1D, 0x00, 0x92, 0x81, 0x1D, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC5, 0x81, 0x1D, 0x00,
  0xF8, 0x81, 0x1D, 0x00, 0x2B, 0xC2, 0x1D, 0x00, 0x4F, 0x82, 0x1D, 0x00, 0x87, 0x82, 0x1D, 0x00,
  0xBC, 0x82, 0x1D, 0x00,
  // Fragment Table
  0xF0, 0x00, 0x3C, 0xFF, 0x03, 0xF8, 0xC0, 0x00,
  // Byte Code Block
  0xE1, 0xEF, 0x85, 0x39, 0x64, 0xEF, 0xF1, 0x18, 0xF2, 0x62, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0,
  0x62, 0x68, 0x72, 0xE1, 0x82, 0x81, 0x86, 0x61, 0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0x2B, 0x64,
  0x68, 0x69, 0x84, 0x80, 0x39, 0xE8, 0x81, 0xE8, 0xEF, 0x83, 0xE6, 0x40, 0x40, 0xF8, 0x40, 0xBC,
  0xFC, 0x40, 0x28, 0x3D, 0xED, 0xEF, 0x40, 0x40, 0x3C, 0x40, 0x40, 0x3C, 0x39, 0x68, 0x79, 0x0B,
  0x64, 0x68, 0x79, 0x0B, 0xE6, 0xD2, 0x68, 0x62, 0xE1, 0xFC, 0x81, 0x62, 0x68, 0x62, 0xE0, 0x40,
  0x72, 0xF0, 0xED, 0xEF, 0xE3, 0xEF, 0x80, 0xFA, 0x68, 0x72, 0xE1, 0x82, 0x81, 0x86, 0x61, 0x80,
  0xFA, 0xE0, 0x0A, 0xE5, 0x7F, 0x80, 0x1A, 0x68, 0x69, 0x84, 0x80, 0x39, 0xE8, 0x81, 0xE3, 0x67,
  0x67, 0x65, 0xE6, 0x40, 0x40, 0xF8, 0x40, 0xBC, 0xFC, 0x40, 0x1B, 0x3D, 0xE2, 0xEF, 0xEF, 0x86,
  0x61, 0x80, 0xFA, 0xE0, 0x0A, 0xE4, 0x6F, 0x63, 0xE8, 0x80, 0x39, 0xE8, 0x81, 0xE3, 0x67, 0x67,
  0x65, 0xE4, 0x40, 0x2C, 0xE8, 0x86, 0x80, 0x68, 0x79, 0x80, 0x1A, 0x64, 0x68, 0x79, 0x09, 0x18,
  0x40, 0x98, 0xC4, 0xD2, 0x68, 0x62, 0xE1, 0xFC, 0x81, 0x62, 0x68, 0x62, 0xE1, 0x40, 0xEF, 0xF0,
  0xEC, 0xEF, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0xE6, 0xEF, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0xE0,
  0x0A, 0xEE, 0xEF, 0x83, 0xE4, 0x40, 0x26, 0x20, 0x77, 0xEF, 0x39, 0x68, 0x79, 0x80, 0x19, 0x40,
  0x88, 0xD4, 0xD2, 0x68, 0x62, 0xE1, 0xFC, 0x40, 0xFC, 0xFC, 0xEF, 0xEF, 0xE3, 0x39, 0x68, 0x72,
  0xE1, 0xD0, 0xEF, 0x86, 0x61, 0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0xE0, 0x0A, 0xE8,
  0x80, 0x39, 0xE8, 0x81, 0xE3, 0x67, 0x67, 0x65, 0xE6, 0x40, 0x40, 0xF8, 0x40, 0xBC, 0xFC, 0x40,
  0x28, 0x3D, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0x62, 0x68, 0x72, 0xE1, 0x82, 0x81, 0x86, 0x61,
  0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0x64, 0x68, 0x69, 0x84, 0x80, 0x39, 0xE8, 0x81,
  0xE3, 0x67, 0x67, 0x65, 0xE4, 0x40, 0x2C, 0xE8, 0x81, 0xE8, 0x19, 0x40, 0x88, 0xD4, 0xED, 0x40,
  0xFC, 0xFC, 0xEF, 0xEF, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0xE2, 0xEF, 0x80, 0xFA, 0x61, 0x1B,
  0x68, 0x69, 0x2A, 0xE3, 0xEF, 0x83, 0xE1, 0x63, 0xEE, 0xEF, 0x83, 0xE4, 0x40, 0x26, 0x20, 0x29,
  0x86, 0x80, 0x68, 0x79, 0x0B, 0x64, 0x68, 0x79, 0x0B, 0xE3, 0x84, 0x61, 0xD2, 0x68, 0x62, 0xE1,
  0xFC, 0x40, 0xFC, 0xFC, 0xEF, 0xEF, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0x62, 0x68, 0x72, 0xE1,
  0x82, 0x81, 0x86, 0x61, 0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0x64, 0x68, 0x69, 0x84,
  0x80, 0x39, 0xE8, 0x81, 0xE3, 0x67, 0x67, 0x65, 0xE6, 0x40, 0x40, 0xF8, 0x40, 0xBC, 0xFC, 0x40,
  0x28, 0x3D, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0xEF, 0x86, 0x61, 0x80, 0xFA, 0x61, 0x1B, 0x68,
  0x69, 0xFC, 0x3A, 0xE0, 0x0A, 0xE8, 0x80, 0x39, 0xE8, 0x81, 0xE3, 0x67, 0x67, 0x65, 0xE4, 0x40,
  0x2C, 0xE8, 0x86, 0x80, 0x68, 0x79, 0x80, 0x19, 0x40, 0x88, 0xD4, 0xD2, 0x68, 0x62, 0xE1, 0xFC,
  0x40, 0xFC, 0xFC, 0xEF, 0xEF, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0x62, 0x68, 0x72, 0xE1, 0x82,
  0x81, 0xE2, 0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0x64, 0x68, 0x69, 0x29, 0xE4, 0x83,
  0xE1, 0x67, 0x67, 0x63, 0xE7, 0x77, 0xE4, 0x40, 0x26, 0x20, 0x29, 0x40, 0x70, 0xD4, 0x83, 0x0B,
  0xE3, 0xC4, 0x40, 0xDE, 0xFC, 0xEE, 0xEF, 0xEF, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0x62, 0x68,
  0x72, 0xE1, 0x82, 0x81, 0x86, 0x61, 0xE3, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0x64, 0x68, 0x69, 0x84,
  0x80, 0x39, 0xE2, 0x81, 0xE7, 0x77, 0xE1, 0x67, 0x67, 0x65, 0x40, 0x26, 0x20, 0xEE, 0x84, 0x40,
  0x7E, 0xCC, 0x1A, 0x61, 0xC1, 0xEF, 0x40, 0xFC, 0xFC, 0xEF, 0xEF, 0xE3, 0x80, 0xFA, 0x68, 0x72,
  0xE1, 0x82, 0x81, 0x86, 0x61, 0x3A, 0x61, 0x1A, 0x68, 0x69, 0x84, 0x80, 0x39, 0xE8, 0x81, 0xE3,
  0x65, 0xE6, 0x40, 0x16, 0x10, 0x84, 0x19, 0xE0, 0x2A, 0xE4, 0x6F, 0x40, 0x9A, 0xF0, 0xEF, 0xE3,
  0xEF, 0x80, 0xFA, 0x68, 0x72, 0xE1, 0x82, 0x81, 0x86, 0x61, 0xEF, 0x3A, 0x61, 0x1A, 0x68, 0x69,
  0x84, 0x80, 0x39, 0xE2, 0x81, 0xE7, 0x77, 0xE1, 0x67, 0x67, 0x63, 0xEA, 0x40, 0x26, 0x1C, 0x86,
  0x40, 0x66, 0xC8, 0x64, 0x68, 0x79, 0x09, 0x1A, 0x61, 0x81, 0xE1, 0x40, 0xAE, 0xCC, 0x62, 0x68,
  0x62, 0xE1, 0x84, 0x40, 0x0B, 0x3D, 0xEF, 0xE3, 0x39, 0x68, 0x72, 0xE1, 0xD0, 0x62, 0x68, 0x72,
  0xE1, 0x82, 0x81, 0x86, 0x61, 0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0xFC, 0x3A, 0x64, 0x68, 0x69,
  0x84, 0x80, 0x39, 0xE8, 0x81, 0xE3, 0x67, 0x67, 0x65, 0xE4, 0x40, 0x2C, 0xE8, 0x81, 0xE8, 0x1A,
  0x63, 0xE5, 0x7F, 0x50, 0x81, 0x84, 0x40, 0xFB, 0xFC, 0xEF, 0xEF, 0xEF, 0xE3, 0x39, 0x68, 0x72,
  0xE1, 0xD0, 0x62, 0x68, 0x72, 0xE1, 0x82, 0x81, 0xE2, 0x80, 0xFA, 0x61, 0x1B, 0x68, 0x69, 0xFC,
  0x3A, 0x64, 0x68, 0x69, 0x29, 0xE4, 0x83, 0xE1, 0x67, 0x67, 0x63, 0xE7, 0x77, 0xE4, 0x40, 0x26,
  0x20, 0x29, 0x81, 0xE8, 0x1A, 0x63, 0xE8, 0x7F, 0x40, 0xFB, 0xFC, 0xEF, 0xEF, 0xEF, 0xFF, 0xFF,
  0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
