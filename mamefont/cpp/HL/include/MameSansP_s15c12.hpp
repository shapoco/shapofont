#pragma once

// Generated by mamec
//   Format Version: 0
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Max Glyph Width : 10 px
//   Font Height     : 15 px
//   Total Pixels    : 9435 px
//   Fragment Shape  : Horizontal
//   Pixel Order     : Near Pixel First
//   Pixel Format    : 1 bpp
//   Large Font      : Yes
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :   12 Bytes
//     Glyph Table   :  380 Bytes (  4.00 Bytes/glyph)
//     Frag. Table   :   64 Bytes (100.00% used)
//     Byte Codes    :  572 Bytes (  6.02 Bytes/glyph)
//     Total         : 1028 Bytes ( 10.82 Bytes/glyph)
//   Instruction Performance:
//     CPX   :   12 -->    9 (- 0.25%)
//     CPY   :  265 -->   59 (-17.27%)
//     LDI   :   10 -->   20 (+ 0.84%)
//     LUD   :  124 -->   62 (- 5.20%)
//     LUP   :  286 -->  286 (  0.00%)
//     RPT   :  309 -->   79 (-19.28%)
//     SFI   :   99 -->   48 (- 4.27%)
//     SFT   :   67 -->   27 (- 3.35%)
//     XOR   :   21 -->   21 (  0.00%)
//     Total : 1193 -->  611 (-48.78%)
//   Byte Code References:
//     Multiple References :  42 Bytes
//     No Ref (ABO)        :   3 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency:  9.178 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t MameSansP_s15c12_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x00, 0x06, 0x20, 0x7E, 0x09, 0x0E, 0x21, 0x03, 0x00, 0x04, 0x0B, 0x1F,
  // Glyph Table
  0x05, 0xC1, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00, 0x03, 0x80, 0x04, 0x00, 0x08, 0x80, 0x07, 0x00,
  0x11, 0x80, 0x06, 0x00, 0x1D, 0x80, 0x07, 0x00, 0x2A, 0x80, 0x08, 0x00, 0x03, 0x80, 0x01, 0x00,
  0x36, 0x80, 0x02, 0x00, 0x3B, 0x80, 0x02, 0x00, 0x40, 0x80, 0x06, 0x00, 0x46, 0x80, 0x06, 0x00,
  0x4B, 0x40, 0x01, 0x00, 0x4E, 0xC0, 0x06, 0x00, 0x51, 0xC0, 0x01, 0x00, 0x53, 0x80, 0x05, 0x00,
  0x57, 0x80, 0x07, 0x00, 0x5B, 0x80, 0x07, 0x00, 0x61, 0x80, 0x07, 0x00, 0x66, 0x80, 0x07, 0x00,
  0x6F, 0x80, 0x07, 0x00, 0x79, 0x80, 0x07, 0x00, 0x87, 0x80, 0x07, 0x00, 0x90, 0x80, 0x07, 0x00,
  0x98, 0x80, 0x07, 0x00, 0x9D, 0x80, 0x07, 0x00, 0xA6, 0xC0, 0x01, 0x00, 0xA8, 0x40, 0x01, 0x00,
  0xAC, 0x80, 0x07, 0x00, 0xB0, 0xC0, 0x06, 0x00, 0xB3, 0x80, 0x07, 0x00, 0xB7, 0x80, 0x07, 0x00,
  0xBD, 0x80, 0x09, 0x00, 0xCB, 0x80, 0x09, 0x00, 0xDA, 0x80, 0x07, 0x00, 0x2B, 0x81, 0x07, 0x00,
  0xE2, 0x80, 0x07, 0x00, 0xE8, 0x80, 0x06, 0x00, 0xEE, 0x80, 0x06, 0x00, 0xF4, 0x80, 0x08, 0x00,
  0x00, 0x81, 0x07, 0x00, 0x14, 0x81, 0x00, 0x00, 0x05, 0x81, 0x07, 0x00, 0x0A, 0x81, 0x07, 0x00,
  0x11, 0x81, 0x06, 0x00, 0x14, 0x81, 0x09, 0x00, 0x21, 0x81, 0x07, 0x00, 0x2B, 0x81, 0x08, 0x00,
  0x32, 0x81, 0x07, 0x00, 0x38, 0x81, 0x09, 0x00, 0x46, 0x81, 0x07, 0x00, 0x4D, 0x81, 0x07, 0x00,
  0x57, 0x81, 0x08, 0x00, 0x5C, 0x81, 0x07, 0x00, 0x60, 0x81, 0x07, 0x00, 0x68, 0x81, 0x09, 0x00,
  0x72, 0x81, 0x07, 0x00, 0x78, 0x81, 0x08, 0x00, 0x82, 0x81, 0x07, 0x00, 0xE2, 0x80, 0x03, 0x00,
  0x8A, 0x81, 0x05, 0x00, 0x8E, 0x81, 0x03, 0x00, 0x92, 0x81, 0x06, 0x00, 0x98, 0xC1, 0x05, 0x00,
  0x9A, 0x81, 0x02, 0x00, 0x9E, 0xC1, 0x06, 0x00, 0xA7, 0x81, 0x06, 0x00, 0xAC, 0xC1, 0x06, 0x00,
  0xAF, 0x81, 0x06, 0x00, 0xB4, 0xC1, 0x06, 0x00, 0xBB, 0x81, 0x04, 0x00, 0xC1, 0x41, 0x06, 0x00,
  0xC7, 0x81, 0x06, 0x00, 0xCC, 0x81, 0x01, 0x00, 0xD1, 0x01, 0x03, 0x10, 0xD8, 0x81, 0x05, 0x00,
  0xDF, 0x81, 0x01, 0x00, 0xE2, 0xC1, 0x08, 0x00, 0xE8, 0xC1, 0x06, 0x00, 0xEB, 0xC1, 0x07, 0x00,
  0xEE, 0x41, 0x06, 0x00, 0xF3, 0x41, 0x06, 0x00, 0xF8, 0xC1, 0x04, 0x00, 0xFE, 0xC1, 0x06, 0x00,
  0x06, 0x82, 0x04, 0x00, 0x0D, 0xC2, 0x06, 0x00, 0x1D, 0xC2, 0x06, 0x00, 0x11, 0xC2, 0x08, 0x00,
  0x19, 0xC2, 0x07, 0x00, 0x1D, 0x42, 0x06, 0x00, 0x25, 0xC2, 0x05, 0x00, 0x2A, 0x82, 0x03, 0x00,
  0x14, 0x81, 0x00, 0x00, 0x2F, 0x82, 0x03, 0x00, 0x34, 0xC2, 0x06, 0x00,
  // Fragment Table
  0x81, 0x3C, 0x42, 0x41, 0x02, 0x1D, 0x23, 0x01, 0x5C, 0x62, 0x78, 0x86, 0x85, 0xC6, 0x82, 0x22,
  0x14, 0x49, 0x31, 0x08, 0x44, 0x91, 0x0C, 0x30, 0x28, 0x1E, 0x10, 0x3E, 0xC1, 0x0E, 0x38, 0x24,
  0x18, 0xF8, 0x46, 0x4A, 0x7F, 0x00, 0x83, 0x48, 0xFF, 0x40, 0x29, 0xAA, 0x92, 0x84, 0x1F, 0x21,
  0x3F, 0x20, 0x2A, 0x1C, 0x6B, 0x07, 0x61, 0x04, 0x7E, 0x1B, 0x8E, 0x12, 0xFE, 0xF1, 0xCD, 0xC9,
  // Byte Code Block
  0x87, 0xE6, 0x3B, 0xB9, 0xAC, 0xAC, 0x2D, 0xE6, 0x94, 0x94, 0xA8, 0x94, 0x68, 0x60, 0xE1, 0xA8,
  0x49, 0x93, 0x9B, 0x91, 0xF6, 0xE0, 0x9D, 0x9E, 0xA7, 0xA7, 0x91, 0x9B, 0x93, 0xBA, 0x60, 0x51,
  0xE0, 0x92, 0x99, 0x9A, 0x40, 0x04, 0xC0, 0xE0, 0x60, 0x71, 0x96, 0xBB, 0xAF, 0x62, 0xF9, 0x95,
  0xB6, 0x61, 0x9D, 0xE5, 0x5C, 0xF0, 0xB7, 0x68, 0x28, 0xE1, 0x65, 0x87, 0x68, 0x08, 0xE1, 0x65,
  0xE1, 0x93, 0x91, 0xB2, 0xB3, 0x65, 0xE2, 0x93, 0xE1, 0xA4, 0x6C, 0xE5, 0xB4, 0x27, 0xE1, 0xA4,
  0x4C, 0xE5, 0x15, 0xB1, 0x68, 0x24, 0x87, 0xD1, 0x80, 0xE2, 0x65, 0x9A, 0xA0, 0x90, 0xBB, 0x9A,
  0xE6, 0xD1, 0xC0, 0x22, 0x23, 0xA8, 0xB8, 0xA9, 0x22, 0x81, 0xA9, 0xFE, 0xC0, 0x82, 0x81, 0x93,
  0x68, 0x20, 0xB7, 0x9F, 0x8F, 0xE1, 0xA8, 0xB1, 0xE1, 0xB8, 0x84, 0x68, 0x20, 0x60, 0x3D, 0x60,
  0x43, 0x60, 0x80, 0xE0, 0xC0, 0x82, 0x81, 0x93, 0x68, 0x20, 0xB7, 0x9B, 0x82, 0xC0, 0x62, 0x81,
  0xA8, 0xC0, 0x83, 0xA9, 0xA9, 0x68, 0x68, 0xE1, 0xD1, 0x80, 0x61, 0x52, 0x53, 0xD1, 0xC0, 0x62,
  0x60, 0x7C, 0xB1, 0x68, 0x20, 0x9A, 0x15, 0x45, 0xB4, 0xB4, 0x4C, 0x27, 0xE1, 0xFE, 0x26, 0x65,
  0xA4, 0xA5, 0x65, 0xE1, 0xF8, 0x06, 0x65, 0xD1, 0xC0, 0x22, 0x9A, 0xA5, 0x62, 0xDA, 0x84, 0x92,
  0x91, 0xCC, 0xBF, 0x92, 0x84, 0xF2, 0xA1, 0xA1, 0x5A, 0xE3, 0x23, 0x97, 0x97, 0xA7, 0xE1, 0xAD,
  0xAD, 0x84, 0xBC, 0x84, 0x68, 0x2A, 0x7A, 0x68, 0x40, 0x84, 0xAE, 0xAF, 0x83, 0x61, 0xB0, 0x83,
  0xC0, 0x6A, 0xAE, 0xB6, 0x83, 0x80, 0xE1, 0x65, 0xA4, 0x87, 0xE2, 0xB0, 0x87, 0x74, 0xA4, 0x87,
  0xE2, 0xB0, 0x87, 0xE4, 0xDA, 0x84, 0xC7, 0xBD, 0x87, 0xE1, 0x8E, 0x8D, 0x9E, 0xE2, 0x68, 0x52,
  0x80, 0xE3, 0xA8, 0x80, 0xE4, 0xF7, 0xE6, 0xC0, 0x82, 0x81, 0x80, 0x83, 0xAF, 0xFC, 0xFB, 0xB5,
  0x65, 0x87, 0xE9, 0xA4, 0x68, 0x18, 0xE0, 0xCC, 0x91, 0x91, 0x92, 0x92, 0xC7, 0x8F, 0x3E, 0x50,
  0xE6, 0xA6, 0xA6, 0xCC, 0xFA, 0xE0, 0x95, 0x95, 0x40, 0x08, 0xC0, 0x9E, 0xDD, 0x87, 0xE1, 0x65,
  0x65, 0x65, 0xB0, 0x83, 0xC0, 0x6A, 0x87, 0xE3, 0xDA, 0x84, 0x87, 0xE1, 0xF4, 0xAF, 0x83, 0x8E,
  0x8B, 0xCA, 0x53, 0x68, 0xD0, 0x61, 0xB0, 0x83, 0xC0, 0x6A, 0xAF, 0x83, 0x7A, 0xD1, 0x80, 0x68,
  0x00, 0x96, 0x97, 0xA9, 0x40, 0x08, 0x40, 0xA8, 0x9A, 0xE4, 0x6E, 0xE9, 0x80, 0xE8, 0x82, 0x81,
  0x80, 0xE1, 0x82, 0xE1, 0x9F, 0xE1, 0xA0, 0xE1, 0x87, 0xE2, 0x92, 0x92, 0xA3, 0xA3, 0xCB, 0xC4,
  0x66, 0xE4, 0x80, 0xC2, 0x9F, 0x9F, 0xA0, 0x65, 0x87, 0xCE, 0x94, 0x94, 0x98, 0x98, 0x9A, 0xE3,
  0x2D, 0xE9, 0xA8, 0xA9, 0x68, 0x20, 0x68, 0x29, 0xC4, 0xA8, 0x87, 0x68, 0x04, 0xB1, 0x1C, 0x8A,
  0xE3, 0x65, 0x93, 0x90, 0x8F, 0x83, 0xA5, 0xE6, 0xE6, 0xB0, 0xB4, 0x25, 0x01, 0xE6, 0x9B, 0x9C,
  0xF0, 0xA1, 0xA2, 0x9C, 0xF5, 0x60, 0x5E, 0x87, 0xE2, 0xD5, 0xC3, 0x63, 0xD1, 0xC7, 0x63, 0xA9,
  0xE2, 0xD8, 0xC3, 0x63, 0xB3, 0x8F, 0xC3, 0xA4, 0x87, 0x84, 0xB3, 0xA0, 0xB7, 0xC4, 0xB0, 0x84,
  0xE5, 0xD8, 0xC3, 0x63, 0x0C, 0x8F, 0xB3, 0x87, 0xE2, 0xD5, 0x83, 0xE4, 0x60, 0x0A, 0x37, 0x58,
  0xE5, 0x93, 0x62, 0x96, 0x93, 0xE6, 0xB7, 0x14, 0x87, 0xE2, 0xAF, 0xFC, 0xFB, 0xB5, 0x63, 0xF8,
  0x84, 0xE9, 0xBE, 0x24, 0x60, 0x11, 0xE4, 0x4F, 0xD5, 0x83, 0xE4, 0xD1, 0xC0, 0x63, 0xD5, 0xC3,
  0x63, 0x87, 0xE1, 0xD8, 0xC3, 0x63, 0x0C, 0xE1, 0x60, 0x59, 0x2C, 0xF9, 0x87, 0xE3, 0x9B, 0x83,
  0x87, 0x9D, 0x97, 0x04, 0x9C, 0x9B, 0xE1, 0xC4, 0xB0, 0x84, 0x68, 0xC0, 0xA0, 0x83, 0xE4, 0x89,
  0x88, 0x87, 0xF4, 0xE0, 0xAA, 0xAB, 0xCD, 0x8E, 0x47, 0x83, 0xDF, 0x93, 0x63, 0xC3, 0xCF, 0x90,
  0x90, 0x93, 0x93, 0x68, 0x28, 0xB0, 0xB1, 0x9A, 0x23, 0xB0, 0x96, 0x84, 0x68, 0xA0, 0x65, 0xF8,
  0xB7, 0x68, 0x80, 0x65, 0xA5, 0xA2, 0x91, 0x92, 0x5B, 0xFF, 0xFF, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
