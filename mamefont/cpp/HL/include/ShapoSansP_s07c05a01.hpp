#pragma once

// Generated by mamec
//   Format Version: 1
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Font Height     : 7 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 2520 px
//   Fragment Shape  : Horizontal
//   Pixel Order     : Near Pixel First
//   Pixel Format    : 1 bpp
//   Large Font      : No
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (  2.00 Bytes/glyph)
//     Frag. Table   :   36 Bytes ( 56.25% used)
//     Byte Codes    :  441 Bytes (  4.64 Bytes/glyph)
//     Total         :  675 Bytes (  7.11 Bytes/glyph)
//   Instruction Performance:
//     CPY   :  135 -->   51 (-12.63%)
//     LUD   :   62 -->   31 (- 4.66%)
//     LUP   :  167 -->  167 (  0.00%)
//     RPT   :   96 -->   38 (- 8.72%)
//     SFI   :   51 -->   28 (- 3.46%)
//     SFT   :  132 -->   80 (- 7.82%)
//     XOR   :   22 -->   22 (  0.00%)
//     Total :  665 -->  417 (-37.29%)
//   Byte Code References:
//     Multiple References :  19 Bytes
//     No Ref (ABO)        :  43 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency:  3.733 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t ShapoSansP_s07c05a01_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x02, 0x20, 0x7E, 0x11, 0x04, 0x06, 0x10,
  // Glyph Table
  0x00, 0x12, 0x01, 0x10, 0x03, 0x12, 0x04, 0x14, 0x06, 0x14, 0x09, 0x14, 0x0D, 0x14, 0x03, 0x10,
  0x10, 0x11, 0x12, 0x11, 0x14, 0x14, 0x16, 0x14, 0x18, 0x10, 0x19, 0x12, 0x1B, 0x10, 0x1D, 0x12,
  0x1F, 0x13, 0x21, 0x13, 0x24, 0x13, 0x27, 0x13, 0x2A, 0x13, 0x2D, 0x13, 0x30, 0x13, 0x33, 0x13,
  0x36, 0x13, 0x38, 0x13, 0x24, 0x10, 0x3B, 0x10, 0x3D, 0x12, 0x3F, 0x12, 0x41, 0x12, 0x43, 0x13,
  0x45, 0x14, 0x48, 0x14, 0x4B, 0x14, 0x4E, 0x14, 0x50, 0x14, 0x4B, 0x13, 0x52, 0x13, 0x55, 0x14,
  0x58, 0x14, 0x10, 0x10, 0x5A, 0x14, 0x5D, 0x14, 0x5F, 0x13, 0x61, 0x14, 0x64, 0x14, 0x66, 0x14,
  0x68, 0x14, 0x6B, 0x14, 0x6E, 0x14, 0x71, 0x14, 0x74, 0x14, 0x77, 0x14, 0x79, 0x14, 0x7B, 0x14,
  0x7E, 0x14, 0x80, 0x14, 0x83, 0x14, 0x86, 0x12, 0x88, 0x12, 0x8A, 0x12, 0x8C, 0x14, 0x8E, 0x12,
  0x8F, 0x11, 0x91, 0x13, 0x93, 0x13, 0x96, 0x12, 0x98, 0x13, 0x9B, 0x13, 0x9E, 0x12, 0xA0, 0x13,
  0xA3, 0x13, 0xA6, 0x10, 0xA8, 0x11, 0xAA, 0x13, 0xAD, 0x11, 0xAF, 0x14, 0xB2, 0x13, 0xB5, 0x13,
  0xB7, 0x13, 0xBA, 0x13, 0xBD, 0x12, 0xC0, 0x13, 0xC3, 0x12, 0xC6, 0x13, 0xC8, 0x14, 0xCA, 0x14,
  0xCD, 0x13, 0xCF, 0x13, 0xD2, 0x13, 0xD5, 0x12, 0x86, 0x10, 0xD7, 0x12, 0xD9, 0x14,
  // Fragment Table
  0x00, 0x11, 0x06, 0x09, 0x1E, 0xE0, 0x04, 0x15, 0x19, 0x01, 0x0E, 0x1D, 0x0A, 0x1F, 0x16, 0x60,
  0x17, 0x0D, 0x14, 0x0B, 0x1B, 0x05, 0x24, 0x08, 0x48, 0x99, 0xD2, 0xA9, 0x4A, 0x86, 0x51, 0x98,
  0xE6, 0x66, 0xE9, 0xC9,
  // Byte Code Block
  0xE6, 0xFF, 0xF1, 0x11, 0x23, 0xFF, 0x95, 0x65, 0x80, 0xDC, 0x8C, 0x6A, 0x86, 0x8A, 0x95, 0x8A,
  0x92, 0x79, 0x80, 0x90, 0x91, 0x1C, 0x8E, 0x8B, 0x80, 0xFF, 0x80, 0xF1, 0x95, 0x8E, 0x83, 0xDE,
  0x8C, 0x68, 0xE8, 0xFF, 0x95, 0x68, 0xE8, 0xFF, 0x80, 0xD6, 0x8A, 0x6A, 0x80, 0xC6, 0x8D, 0x6A,
  0xE4, 0x11, 0xE2, 0x18, 0x4A, 0xFF, 0xE4, 0x89, 0x80, 0xFF, 0xC6, 0x68, 0x68, 0x89, 0x80, 0xD2,
  0x83, 0x6A, 0x80, 0x82, 0x86, 0xE2, 0x80, 0xFF, 0x80, 0x82, 0xA3, 0x31, 0x2D, 0xFF, 0x80, 0x18,
  0x08, 0x82, 0x6A, 0xFF, 0x80, 0x99, 0x3D, 0x08, 0x68, 0x00, 0x80, 0x1C, 0x89, 0xF9, 0x08, 0x29,
  0x80, 0x82, 0x89, 0xF9, 0x83, 0x79, 0x80, 0x1C, 0x83, 0x98, 0xFA, 0x2D, 0x80, 0xA1, 0x25, 0x6A,
  0x80, 0xA0, 0x25, 0x97, 0x79, 0xFF, 0x68, 0x50, 0x3B, 0xFF, 0x97, 0x22, 0x6A, 0xFF, 0xE1, 0x18,
  0x41, 0x59, 0x68, 0x10, 0x01, 0x6A, 0x80, 0xD2, 0x05, 0x41, 0x80, 0xDA, 0x8B, 0x89, 0x79, 0xFF,
  0x80, 0x8A, 0xC1, 0x8D, 0x81, 0x80, 0x80, 0x1C, 0x81, 0x48, 0x6A, 0xFF, 0x80, 0x84, 0xC9, 0x6A,
  0x80, 0x1C, 0xC1, 0x6A, 0x80, 0x1C, 0x81, 0x41, 0x2D, 0xFF, 0x80, 0x8A, 0x38, 0xFB, 0xF3, 0xD4,
  0xD0, 0x81, 0x8D, 0x6A, 0x80, 0xF4, 0xE0, 0xC1, 0x8A, 0x85, 0xD0, 0x83, 0x14, 0x6A, 0xF4, 0x3C,
  0xE2, 0x2D, 0xD0, 0x94, 0x87, 0x81, 0x79, 0xFF, 0xD0, 0xF1, 0xD7, 0x79, 0x80, 0x8A, 0xC1, 0x6A,
  0x80, 0x1C, 0x81, 0x61, 0x29, 0xFF, 0x80, 0x8A, 0x81, 0xD7, 0xD4, 0xFF, 0x80, 0x1C, 0x81, 0x41,
  0x81, 0x80, 0x80, 0x8A, 0xD9, 0x08, 0x79, 0xFF, 0x80, 0x8D, 0x86, 0xE2, 0x80, 0xFF, 0xD0, 0xE2,
  0x8A, 0x85, 0xD0, 0xE1, 0x9C, 0x2D, 0x80, 0x9E, 0xF2, 0x3D, 0x8C, 0x0C, 0xD0, 0x8C, 0x86, 0x6A,
  0xD0, 0x81, 0x8C, 0x96, 0x29, 0xFF, 0x80, 0x8D, 0x97, 0x21, 0x79, 0xFF, 0x18, 0x89, 0xE1, 0x6A,
  0xC9, 0x68, 0x48, 0x86, 0x18, 0x86, 0xE1, 0x6A, 0x86, 0x8C, 0x81, 0x5B, 0xE5, 0x18, 0x89, 0x01,
  0xE3, 0xFF, 0xE1, 0x9D, 0x3D, 0x2D, 0x68, 0x10, 0xF9, 0x83, 0x61, 0x80, 0x8F, 0x26, 0x62, 0xFF,
  0x85, 0x25, 0x83, 0x61, 0x08, 0xFF, 0xE1, 0x82, 0x1C, 0x89, 0x71, 0xFF, 0x9F, 0x25, 0x18, 0x2A,
  0xE1, 0x84, 0xD3, 0xF9, 0x82, 0xFF, 0x68, 0x10, 0xF9, 0x83, 0xE1, 0x0C, 0x97, 0x3B, 0x69, 0xFF,
  0x98, 0x25, 0x68, 0x68, 0xF4, 0x10, 0xF3, 0xFA, 0x14, 0x2D, 0x80, 0xF8, 0x68, 0x88, 0xE1, 0x93,
  0x87, 0xE1, 0x80, 0xFF, 0xE1, 0x18, 0x83, 0xE1, 0x0C, 0xFF, 0xE1, 0xD2, 0x62, 0xFF, 0xE1, 0x18,
  0x83, 0x61, 0x89, 0xFF, 0xE1, 0x8A, 0x83, 0x61, 0x97, 0xFF, 0xE1, 0x95, 0xF9, 0x68, 0x28, 0xFF,
  0xE1, 0x84, 0x39, 0x18, 0x0C, 0xFF, 0x68, 0x10, 0x18, 0x38, 0xE0, 0x2D, 0xE1, 0xA2, 0xE1, 0x2D,
  0xE1, 0xC1, 0x9C, 0x2D, 0xE1, 0x9E, 0x3D, 0x8C, 0x0C, 0xFF, 0xE1, 0x88, 0x82, 0x62, 0xE1, 0xC3,
  0x84, 0xF9, 0x82, 0xFF, 0xE1, 0x1C, 0x86, 0xF9, 0x71, 0xFF, 0x86, 0x9A, 0x29, 0x6A, 0x9B, 0x36,
  0x6A, 0xFF, 0xE1, 0xF1, 0x87, 0x0A, 0xFF, 0xFF, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
