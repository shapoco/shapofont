#pragma once

// Generated by mamec
//   Format Version: 1
//   First Code      : '.' (0x2E)
//   Last Code       : 'F' (0x46)
//   Font Height     : 40 px
//   Max Glyph Width : 30 px
//   Total Pixels    : 19480 px
//   Fragment Shape  : Horizontal
//   Bit Order       : LSB First
//   Large Font      : Yes
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  100 Bytes (  4.00 Bytes/glyph)
//     Frag. Table   :   24 Bytes ( 37.50% used)
//     Byte Codes    :  537 Bytes ( 21.48 Bytes/glyph)
//     Total         :  669 Bytes ( 26.76 Bytes/glyph)
//   Instruction Performance:
//     CPX   :  800 -->   66 (-28.23%)
//     CPY   :  375 -->   77 (-11.46%)
//     LUD   :  106 -->   53 (- 2.04%)
//     LUP   :   80 -->   80 (  0.00%)
//     RPT   :  946 -->  105 (-32.35%)
//     SFI   :  140 -->   50 (- 3.46%)
//     SFT   :   86 -->   36 (- 1.92%)
//     XOR   :   67 -->   67 (  0.00%)
//     Total : 2600 -->  534 (-79.46%)
//   Byte Code References:
//     Multiple References :   0 Bytes
//     No Ref (ABO)        :   3 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency: 29.118 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t MameSeg7_s40c38w06_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x30, 0x2E, 0x46, 0x0B, 0x1D, 0x27, 0x80,
  // Glyph Table
  0x00, 0x00, 0x06, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x1D, 0x10, 0x23, 0x00, 0x1D, 0x10,
  0x3C, 0x00, 0x1D, 0x10, 0x56, 0x00, 0x1D, 0x10, 0x7C, 0x00, 0x1D, 0x10, 0x99, 0x00, 0x1D, 0x10,
  0xB6, 0x00, 0x1D, 0x10, 0xD8, 0x00, 0x1D, 0x10, 0xFE, 0x00, 0x1D, 0x10, 0x1B, 0x01, 0x1D, 0x10,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x40, 0x01, 0x1D, 0x10,
  0x67, 0x01, 0x1D, 0x10, 0x8D, 0x01, 0x1D, 0x10, 0xAA, 0x01, 0x1D, 0x10, 0xCF, 0x01, 0x1D, 0x10,
  0xF3, 0x01, 0x1D, 0x10,
  // Fragment Table
  0xCC, 0xE0, 0xF0, 0xF8, 0x98, 0x3C, 0x3E, 0x9E, 0xCF, 0xE6, 0x67, 0xF3, 0x1E, 0x0C, 0x79, 0x33,
  0x3F, 0x30, 0x19, 0x07, 0xFF, 0x06, 0x18, 0x00,
  // Byte Code Block
  0xE1, 0xEF, 0xEF, 0x8C, 0x90, 0x90, 0x62, 0xFE, 0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0, 0xE2,
  0x86, 0xDC, 0xFA, 0x64, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D, 0x94, 0xE1, 0x64, 0xEF, 0x40, 0x4A,
  0xFC, 0xEF, 0xEF, 0xE3, 0xEF, 0x40, 0x40, 0x3C, 0xFD, 0x82, 0x31, 0x68, 0xA0, 0xE2, 0xF1, 0xF2,
  0x91, 0xFC, 0x66, 0x90, 0xE3, 0x86, 0x85, 0x96, 0xFB, 0xEC, 0xEF, 0xEF, 0xFE, 0xC1, 0x02, 0xE5,
  0x7F, 0x80, 0x87, 0x86, 0xF6, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D, 0x94, 0xE1, 0x63, 0xE3, 0x67,
  0x40, 0x3C, 0xF8, 0xE8, 0xEF, 0xEF, 0xFE, 0xC1, 0x02, 0xE4, 0x6F, 0x63, 0xE8, 0xFE, 0x32, 0x61,
  0x0D, 0x94, 0xE1, 0x63, 0xE4, 0x77, 0x40, 0x1A, 0xD4, 0xDA, 0x83, 0xF2, 0x68, 0xA0, 0xE2, 0xF1,
  0xDE, 0x93, 0x67, 0x90, 0xE2, 0x86, 0x85, 0x92, 0x40, 0x8E, 0xDC, 0xED, 0xE3, 0x96, 0x85, 0xF6,
  0xF7, 0x68, 0xA0, 0xE2, 0xD6, 0xD0, 0x81, 0x03, 0xEF, 0xEF, 0x94, 0xE2, 0x77, 0xEF, 0xFD, 0x82,
  0x31, 0x68, 0xA0, 0x40, 0x50, 0x84, 0x40, 0x8E, 0xF8, 0xFE, 0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68,
  0xA0, 0xE2, 0xD6, 0xD0, 0x81, 0x02, 0xE8, 0xFE, 0x32, 0x61, 0x0D, 0x94, 0xE1, 0x63, 0xE3, 0x67,
  0x40, 0x3C, 0xF8, 0xE8, 0xEF, 0xEF, 0xFE, 0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0, 0xE2, 0xD6,
  0xD0, 0x64, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D, 0x94, 0xE1, 0x63, 0xE3, 0x67, 0x40, 0x18, 0xD4,
  0x22, 0xF8, 0xE8, 0x12, 0x93, 0x40, 0x8E, 0xF8, 0xFE, 0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0,
  0xE2, 0x86, 0xDC, 0xFA, 0xE4, 0xEF, 0x94, 0xE1, 0x64, 0xEF, 0xEF, 0x1C, 0xF4, 0x61, 0xDA, 0x83,
  0xF2, 0xE2, 0x40, 0x50, 0x84, 0x61, 0x40, 0x60, 0xC8, 0x96, 0xFB, 0xEC, 0xEF, 0xEF, 0xFE, 0x81,
  0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0, 0xE2, 0xD6, 0xD0, 0x64, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D,
  0x94, 0xE1, 0x63, 0xE3, 0x67, 0x40, 0x3C, 0xF8, 0xE8, 0xEF, 0xEF, 0xFE, 0x81, 0x61, 0xD4, 0xF6,
  0xF7, 0x68, 0xA0, 0xE2, 0xD6, 0xD0, 0x81, 0x02, 0xE8, 0xFE, 0x32, 0x61, 0x0D, 0x94, 0xE1, 0x63,
  0xE4, 0x77, 0x40, 0x1A, 0xD4, 0xDA, 0x83, 0xF2, 0x68, 0xA0, 0x40, 0x50, 0x84, 0x40, 0x8E, 0xF8,
  0xFE, 0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0, 0xE2, 0xD6, 0xD0, 0x64, 0x68, 0xA1, 0xF4, 0x95,
  0xF9, 0xE4, 0x94, 0xE1, 0x67, 0x67, 0x64, 0xEF, 0x1C, 0xF4, 0x61, 0xDA, 0x40, 0x4E, 0xD4, 0x90,
  0x86, 0x85, 0x96, 0xFB, 0xEC, 0xEF, 0xEF, 0xE3, 0x96, 0x85, 0xF6, 0xF7, 0x68, 0xA0, 0xE2, 0xD6,
  0xD0, 0x64, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D, 0xEF, 0x94, 0xE1, 0x67, 0x67, 0x64, 0xEF, 0x12,
  0x93, 0x40, 0x5E, 0xC8, 0x85, 0x92, 0x28, 0x93, 0x61, 0xF8, 0xE8, 0xEF, 0xEF, 0xEF, 0x32, 0x81,
  0x80, 0x87, 0x86, 0xF6, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D, 0xEF, 0x94, 0xE1, 0x67, 0x67, 0x64,
  0xEF, 0x12, 0x63, 0xE5, 0x7F, 0x50, 0xF8, 0xE8, 0xEF, 0xEF, 0xEF, 0x32, 0x81, 0x80, 0x87, 0x86,
  0xF6, 0x68, 0xA1, 0xD8, 0xD2, 0x61, 0x0D, 0xEF, 0x94, 0xE2, 0x77, 0x77, 0x77, 0xFD, 0xD2, 0x40,
  0x44, 0xC8, 0x67, 0x90, 0xE2, 0x86, 0x85, 0x92, 0x28, 0x93, 0x61, 0xF8, 0xE8, 0xEF, 0xEF, 0xFE,
  0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0, 0xE2, 0xD6, 0xD0, 0x64, 0x68, 0xA1, 0xD8, 0xD2, 0x61,
  0x0D, 0x94, 0xE1, 0x63, 0xE3, 0x67, 0x40, 0x18, 0xD4, 0x22, 0xF8, 0xE8, 0x12, 0x93, 0x77, 0x6F,
  0x40, 0x9E, 0xE8, 0xFE, 0x81, 0x61, 0xD4, 0xF6, 0xF7, 0x68, 0xA0, 0xE2, 0xD6, 0xD0, 0x64, 0x68,
  0xA1, 0xF4, 0x95, 0xF9, 0xE4, 0x94, 0xE1, 0x67, 0x67, 0x64, 0xEF, 0x1C, 0xF4, 0xE0, 0x22, 0xF8,
  0xE8, 0x12, 0x64, 0x40, 0x9F, 0x34, 0xFF, 0xFF, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
