// Generated from ShapoFont
//   Format Version: 1
//   First Code      : 46
//   Glyph Count     : 12
//   Font Height     : 64 px
//   Max Glyph Width : 40 px
//   Total Pixels    : 26368 px
//   Fragment Shape  : Horizontal
//   Bit Order       : LSB First
//   Shrinked Format : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :   48 Bytes (4 Bytes/glyph)
//     Lookup Table  :    8 Bytes (12.50% used)
//     Bytecodes     :  592 Bytes (49.33 Bytes/glyph)
//     Total         :  656 Bytes (54.67 Bytes/glyph)
//   Compression Performance:
//     CPX (src=D) :  477 -->   54 ( -12.71%)
//     CPX (src=R) : 1348 -->  156 ( -35.82%)
//     CPY         :    6 -->    3 (  -0.09%)
//     LUD (step=0):    6 -->    3 (  -0.09%)
//     LUP         :   63 -->   63 (  +0.00%)
//     REV         :   78 -->   12 (  -1.98%)
//     RPT         : 1079 -->  163 ( -27.52%)
//     SLC         :   41 -->   13 (  -0.84%)
//     SLS         :   24 -->   10 (  -0.42%)
//     SRC         :   65 -->   24 (  -1.23%)
//     SRS         :   81 -->   31 (  -1.50%)
//     XOR         :   60 -->   60 (  +0.00%)
//     Total       : 3328 -->  592 ( -82.21%)
//   Memory Efficiency: 40.195 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

static const uint8_t MameSansDigitP_s64w08_blob[] = {
  // Font Header
  0x01, 0x00, 0x2E, 0x0B, 0x07, 0x3F, 0x0C, 0x27,
  // Glyph Table
  0x00, 0x00, 0x0B, 0x11, 0xFF, 0xFF, 0xFF, 0xFF, 0x12, 0x00, 0x27, 0x2D, 0x3B, 0x00, 0x27, 0x2D,
  0x57, 0x00, 0x27, 0x2D, 0x98, 0x00, 0x27, 0x2D, 0xE0, 0x00, 0x27, 0x2D, 0x0E, 0x01, 0x27, 0x2D,
  0x54, 0x01, 0x27, 0x2D, 0x9B, 0x01, 0x27, 0x2D, 0xC5, 0x01, 0x27, 0x2D, 0x0D, 0x02, 0x27, 0x2D,
  // Lookup Table
  0xF8, 0xFF, 0x00, 0x81, 0x1F, 0x7E, 0xC3, 0x00,
  // Bytecodes
  0xE3, 0xEF, 0xEF, 0xEF, 0x7C, 0x74, 0xF1, 0xE0, 0x71, 0xC0, 0x40, 0xBA, 0x54, 0xF2, 0xE0, 0xF3,
  0xE0, 0xC5, 0xE3, 0xF7, 0x73, 0x00, 0xF2, 0xE0, 0xF1, 0xE2, 0x01, 0xEE, 0xC0, 0x40, 0xA0, 0x7C,
  0x75, 0xE4, 0x65, 0x61, 0xE0, 0xF1, 0xE0, 0x02, 0xEE, 0xC0, 0x40, 0x9F, 0x01, 0xE6, 0x03, 0xC0,
  0x59, 0x16, 0xC0, 0x40, 0xFF, 0xC0, 0xA0, 0xFF, 0xC0, 0x40, 0x9F, 0xE7, 0xF7, 0xE2, 0xC5, 0xEF,
  0xEF, 0xEF, 0xF7, 0xE0, 0x72, 0x75, 0xE2, 0x62, 0x64, 0xC0, 0x4E, 0x2F, 0x01, 0xEE, 0xEF, 0xEF,
  0xC0, 0x60, 0xBF, 0xEF, 0xC0, 0x40, 0x3F, 0xE3, 0xF7, 0x73, 0x00, 0xF2, 0xE0, 0xF1, 0x47, 0xEF,
  0xEF, 0x73, 0x73, 0xE6, 0x02, 0x7C, 0x75, 0xE4, 0x65, 0x61, 0xE0, 0xF1, 0xE0, 0xC0, 0x54, 0x23,
  0x63, 0x01, 0xEE, 0x03, 0xC0, 0x51, 0x26, 0x63, 0xE3, 0xC0, 0xAC, 0x4B, 0xC0, 0xAF, 0x4E, 0xCA,
  0xC0, 0x46, 0x84, 0xC0, 0x6A, 0xDC, 0x01, 0xE6, 0xC0, 0xD5, 0x4C, 0xE2, 0x01, 0xE1, 0xCC, 0xF6,
  0xE2, 0x84, 0x61, 0xC0, 0xA4, 0xD7, 0x01, 0xE6, 0x00, 0xE6, 0x02, 0xE6, 0xEF, 0xEF, 0xF7, 0x76,
  0xF1, 0xE0, 0x80, 0x43, 0x43, 0x01, 0xE2, 0xC4, 0xE7, 0x73, 0x73, 0xE6, 0xC0, 0x6F, 0x50, 0xE0,
  0xF1, 0xE0, 0x51, 0x55, 0xE4, 0x45, 0x02, 0x01, 0xE6, 0xC0, 0x6B, 0x0C, 0x62, 0x01, 0xE6, 0xC0,
  0x6F, 0xCA, 0xEB, 0x03, 0x01, 0xE3, 0xEF, 0x63, 0x63, 0xE2, 0xC0, 0x90, 0xD3, 0xC0, 0x40, 0x93,
  0x04, 0xE6, 0xF4, 0x63, 0xE7, 0xD7, 0x53, 0xC0, 0xDE, 0xC3, 0xE2, 0x01, 0xE2, 0xC0, 0x40, 0x93,
  0xEB, 0xF7, 0xE2, 0xF6, 0xE2, 0xF5, 0xE2, 0xF4, 0xE2, 0x00, 0xE2, 0xF2, 0xE2, 0xF1, 0xE2, 0x01,
  0xE6, 0x02, 0xEE, 0xC0, 0x58, 0x07, 0xC0, 0x5C, 0xDF, 0xC0, 0x68, 0x17, 0xC0, 0x58, 0x07, 0x02,
  0xEE, 0xC0, 0x58, 0x97, 0xC0, 0x40, 0x27, 0xEF, 0xC0, 0x40, 0x9F, 0xC0, 0x78, 0xB7, 0x78, 0xE6,
  0xF4, 0xE6, 0x00, 0xE6, 0xF2, 0xE6, 0x02, 0xEE, 0xF7, 0x76, 0xC0, 0x5A, 0x83, 0x43, 0x43, 0x01,
  0xE6, 0xC0, 0x78, 0xCF, 0xC0, 0x50, 0x88, 0xEE, 0xF0, 0xE0, 0xF1, 0xE0, 0x51, 0x55, 0xE4, 0x45,
  0x02, 0xBB, 0xC4, 0xE7, 0xD7, 0xE6, 0xC0, 0x6F, 0xC6, 0xEF, 0x03, 0x01, 0xEE, 0x02, 0xEE, 0xC0,
  0x90, 0xD3, 0xC0, 0x40, 0x93, 0xB0, 0xE6, 0xC0, 0x95, 0xD4, 0x53, 0xC0, 0xDE, 0xC3, 0xE2, 0x01,
  0xE2, 0xC0, 0x40, 0x93, 0xEB, 0xF7, 0xE2, 0xF6, 0xE2, 0xF5, 0xE2, 0xF4, 0xE2, 0x00, 0xE2, 0xF2,
  0xE2, 0xF1, 0xE2, 0x73, 0xC7, 0xC0, 0x52, 0x83, 0x43, 0x43, 0xC0, 0x58, 0x07, 0xC0, 0x5C, 0xD0,
  0x01, 0xE6, 0x65, 0x61, 0xE0, 0xF1, 0xE0, 0x63, 0xC0, 0x40, 0x90, 0x45, 0x02, 0x54, 0xE2, 0xF1,
  0xE2, 0x02, 0xEE, 0x01, 0xE6, 0x03, 0x02, 0xE9, 0xC0, 0x40, 0x9B, 0xEF, 0xC0, 0x90, 0xD3, 0xC0,
  0x40, 0x9F, 0xEF, 0xF0, 0x53, 0x04, 0xC0, 0xDF, 0x56, 0x63, 0xE2, 0x01, 0xEE, 0x02, 0xEE, 0xEF,
  0xEF, 0xC0, 0x50, 0x27, 0xC0, 0x40, 0x3F, 0xF7, 0xE2, 0xF6, 0xE2, 0xF5, 0xE2, 0xF4, 0xE2, 0x00,
  0xE2, 0xF2, 0xE2, 0x01, 0xE6, 0xC0, 0x48, 0x17, 0xF1, 0xE2, 0x71, 0xC0, 0x40, 0xD9, 0x01, 0xE6,
  0xF7, 0xE2, 0xC0, 0x9C, 0xF3, 0xE4, 0x73, 0xE0, 0x80, 0xF2, 0xE2, 0xF1, 0xE1, 0xD7, 0xE0, 0x43,
  0xA8, 0x73, 0x00, 0xC0, 0x52, 0x05, 0x71, 0xC0, 0x40, 0x8E, 0xE3, 0x78, 0x76, 0xE3, 0xF7, 0x04,
  0x61, 0xE0, 0xF2, 0xE0, 0xF1, 0xE1, 0xD7, 0x01, 0xE8, 0x65, 0xC0, 0x55, 0x04, 0x61, 0xC7, 0x55,
  0xE4, 0x45, 0x02, 0x05, 0x01, 0xE5, 0x06, 0x02, 0xE7, 0xC0, 0x40, 0x8A, 0xE6, 0x03, 0x02, 0xE7,
  0xC0, 0x40, 0x91, 0xC0, 0x9E, 0x75, 0x75, 0xE4, 0x65, 0xC0, 0xCE, 0x7D, 0xE2, 0xE3, 0xF7, 0x73,
  0x00, 0xF2, 0xE0, 0xF1, 0xE2, 0x73, 0xC0, 0x40, 0x90, 0xEB, 0xEF, 0x7C, 0x75, 0xE4, 0x65, 0x61,
  0xE0, 0xF1, 0xE0, 0x63, 0xC0, 0x40, 0xAB, 0x01, 0xE6, 0x03, 0x02, 0xE9, 0xC0, 0x40, 0xA3, 0xF7,
  0xE2, 0xF6, 0xE2, 0xC0, 0x90, 0xDF, 0xE6, 0x4C, 0x00, 0xE2, 0xF2, 0xE2, 0xF1, 0xE2, 0x71, 0xC0,
  0x40, 0xC9, 0xC0, 0xDC, 0x53, 0xC0, 0x5C, 0xD0, 0xE2, 0xF3, 0xE2, 0xF2, 0xE1, 0xC0, 0xAE, 0xD0,
};

extern const mamefont::Font MameSansDigitP_s64w08(MameSansDigitP_s64w08_blob);

