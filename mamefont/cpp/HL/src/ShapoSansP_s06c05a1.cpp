// Generated by MameFont
//   Format Version: 1
//   First Code      : 32
//   Glyph Count     : 95
//   Font Height     : 7 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 2520 px
//   Fragment Shape  : Horizontal
//   Bit Order       : LSB First
//   Shrinked Format : Yes
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (2 Bytes/glyph)
//     Lookup Table  :   24 Bytes (37.50% used)
//     Bytecodes     :  503 Bytes (5.29 Bytes/glyph)
//     Total         :  725 Bytes (7.63 Bytes/glyph)
//   Compression Performance:
//     CPY         :  139 -->   56 ( -12.48%)
//     LUD (step=0):   30 -->   15 (  -2.26%)
//     LUD (step=1):   56 -->   28 (  -4.21%)
//     LUP         :  235 -->  235 (  +0.00%)
//     RPT         :  145 -->   63 ( -12.33%)
//     SFT         :   34 -->   29 (  -0.75%)
//     XOR         :   26 -->   26 (  +0.00%)
//     Total       :  665 -->  452 ( -32.03%)
//   Memory Efficiency:  3.476 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t ShapoSansP_s06c05a1_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x20, 0x20, 0x5E, 0x17, 0x06, 0x07, 0x04,
  // Glyph Table
  0x00, 0x32, 0x01, 0x10, 0x04, 0x32, 0x06, 0x54, 0x09, 0x54, 0x0C, 0x54, 0x0F, 0x54, 0x13, 0x10,
  0x15, 0x21, 0x17, 0x21, 0x19, 0x54, 0x1C, 0x54, 0x1E, 0x10, 0x20, 0x32, 0x22, 0x10, 0x24, 0x32,
  0x27, 0x43, 0x29, 0x43, 0x2C, 0x43, 0x2F, 0x43, 0x32, 0x43, 0x35, 0x43, 0x39, 0x43, 0x3C, 0x43,
  0x3F, 0x43, 0x41, 0x43, 0x43, 0x10, 0x45, 0x10, 0x47, 0x32, 0x49, 0x32, 0x4B, 0x32, 0x4D, 0x43,
  0x4F, 0x54, 0x52, 0x54, 0x55, 0x54, 0x58, 0x54, 0x5B, 0x54, 0x5D, 0x43, 0x60, 0x43, 0x63, 0x54,
  0x67, 0x54, 0x69, 0x10, 0x6B, 0x54, 0x6E, 0x54, 0x70, 0x43, 0x73, 0x54, 0x76, 0x54, 0x79, 0x54,
  0x7B, 0x54, 0x7E, 0x54, 0x81, 0x54, 0x84, 0x54, 0x87, 0x54, 0x8A, 0x54, 0x8C, 0x54, 0x8E, 0x54,
  0x91, 0x54, 0x93, 0x54, 0x95, 0x54, 0x98, 0x32, 0x9A, 0x32, 0x9D, 0x32, 0x9F, 0x54, 0xA2, 0x32,
  0xA3, 0x21, 0xA5, 0x43, 0xA8, 0x43, 0xAB, 0x32, 0xAD, 0x43, 0xB0, 0x43, 0xB3, 0x32, 0xB7, 0x43,
  0xBA, 0x43, 0xBD, 0x10, 0xC0, 0x21, 0xC3, 0x43, 0xC6, 0x21, 0xC9, 0x54, 0xCC, 0x43, 0xCF, 0x43,
  0xD1, 0x43, 0xD4, 0x43, 0xD7, 0x32, 0xDA, 0x43, 0xDD, 0x32, 0xE1, 0x43, 0xE4, 0x54, 0xE6, 0x54,
  0xE9, 0x43, 0xEB, 0x43, 0xED, 0x43, 0xF0, 0x32, 0xF3, 0x10, 0xF4, 0x32, 0xF7, 0x54,
  // Lookup Table
  0x06, 0x09, 0x0E, 0x08, 0x04, 0x00, 0x11, 0x0A, 0x15, 0x1F, 0x16, 0x0F, 0x05, 0x07, 0x19, 0x1E,
  0x17, 0x0D, 0x1D, 0x10, 0x14, 0x1B, 0x0B, 0x03,
  // Bytecodes
  0x66, 0xF0, 0x05, 0x70, 0x61, 0x05, 0xC1, 0xF0, 0x4C, 0x05, 0x63, 0xF0, 0x05, 0x07, 0x09, 0x07,
  0xEA, 0xF0, 0x04, 0x02, 0x0C, 0x02, 0x14, 0xF9, 0x05, 0x10, 0x11, 0x59, 0x12, 0x05, 0x05, 0x71,
  0x0C, 0x0A, 0x01, 0x0A, 0x05, 0xF0, 0x70, 0x60, 0x05, 0x63, 0x71, 0xA0, 0x61, 0xEA, 0x70, 0x80,
  0x61, 0xEA, 0x05, 0x04, 0x08, 0x02, 0xEA, 0xF0, 0x05, 0x44, 0x09, 0xEA, 0x64, 0x70, 0x60, 0xF0,
  0x62, 0x0D, 0xCA, 0xF0, 0x64, 0x70, 0x05, 0xF0, 0x44, 0xA0, 0x61, 0xA0, 0x60, 0xF0, 0x05, 0x50,
  0x01, 0xEA, 0x05, 0x00, 0x04, 0x62, 0x05, 0xF0, 0x05, 0x50, 0xA1, 0x0B, 0x05, 0xF0, 0x05, 0x0D,
  0x03, 0x00, 0xEA, 0xF0, 0x05, 0x41, 0x0B, 0x43, 0x05, 0xF0, 0x05, 0x0B, 0xA8, 0x0D, 0x03, 0x0D,
  0x05, 0xF0, 0x05, 0x00, 0xA4, 0x0D, 0x01, 0xF9, 0x05, 0x0B, 0x01, 0x53, 0x54, 0xF0, 0x05, 0x50,
  0x00, 0xEA, 0x05, 0x50, 0x52, 0xF9, 0x61, 0x70, 0x05, 0xC2, 0x61, 0x70, 0xC2, 0x60, 0x05, 0x04,
  0xA1, 0xEA, 0x61, 0x0D, 0xC1, 0xD9, 0x05, 0x70, 0x81, 0xEA, 0x05, 0x50, 0x54, 0xC1, 0x05, 0x02,
  0x12, 0x12, 0xAC, 0xF9, 0x05, 0x02, 0x46, 0x09, 0x06, 0x05, 0x05, 0x0B, 0x06, 0x0B, 0xEA, 0xF0,
  0x05, 0x0F, 0xAC, 0x60, 0xEA, 0xF0, 0x05, 0x0B, 0x46, 0xEA, 0x05, 0x0B, 0xA8, 0x0B, 0xEA, 0xF0,
  0x05, 0x0B, 0xA8, 0xC1, 0x60, 0x05, 0x05, 0x02, 0xA8, 0x0E, 0x06, 0x0F, 0x05, 0xF0, 0x55, 0x06,
  0x09, 0xEA, 0x05, 0x70, 0x61, 0xEA, 0x05, 0x13, 0x13, 0x46, 0x02, 0x05, 0x55, 0x01, 0x0D, 0xEA,
  0x05, 0x70, 0x62, 0x0B, 0x05, 0xF0, 0x55, 0x15, 0x08, 0x06, 0xF9, 0xF0, 0x55, 0x71, 0x08, 0x0E,
  0xF9, 0xF0, 0x05, 0x02, 0x46, 0xEA, 0x05, 0x0B, 0x06, 0xE1, 0xA9, 0xF0, 0x05, 0x02, 0x06, 0x08,
  0x5E, 0x05, 0x05, 0x0B, 0x06, 0xC1, 0x06, 0x05, 0x05, 0x02, 0xA8, 0x02, 0x13, 0xF9, 0x05, 0x09,
  0x04, 0x62, 0x05, 0xF0, 0x55, 0x62, 0x02, 0x05, 0x55, 0x61, 0x07, 0x54, 0x55, 0x48, 0x09, 0x07,
  0x05, 0xF0, 0x55, 0x07, 0x04, 0xEA, 0x55, 0x56, 0x44, 0x05, 0x05, 0x09, 0x03, 0xA1, 0xF9, 0xF0,
  0x0D, 0xA4, 0x61, 0xEA, 0x70, 0x60, 0x80, 0x61, 0x44, 0xF0, 0x0D, 0x04, 0x61, 0xEA, 0x04, 0x07,
  0x06, 0x05, 0x62, 0xF0, 0x65, 0x0D, 0x70, 0x80, 0x05, 0x63, 0x61, 0x00, 0x03, 0x4B, 0x05, 0xF0,
  0x05, 0x70, 0x0D, 0x01, 0xE1, 0x05, 0x61, 0x00, 0xA4, 0xE2, 0x05, 0x03, 0x02, 0x01, 0xE1, 0x05,
  0x61, 0x00, 0x0B, 0xA8, 0xF1, 0xF0, 0x05, 0x00, 0xA4, 0x0D, 0xC8, 0x60, 0x05, 0xF0, 0x61, 0x02,
  0x51, 0x03, 0x00, 0xF0, 0x05, 0x70, 0x0D, 0x01, 0x61, 0x05, 0x05, 0x70, 0xC1, 0x60, 0xD1, 0xF0,
  0x05, 0x71, 0xC1, 0x61, 0xA0, 0xF0, 0x05, 0x70, 0x01, 0x5C, 0x01, 0x05, 0x05, 0x17, 0x70, 0x62,
  0x05, 0xF0, 0x61, 0x16, 0x08, 0x61, 0x05, 0xF0, 0x61, 0x0D, 0x01, 0x61, 0x05, 0xF0, 0x61, 0x50,
  0xE2, 0xF0, 0x61, 0x0D, 0x01, 0xE1, 0xA4, 0xF0, 0x61, 0x02, 0x01, 0xE1, 0x03, 0xF0, 0x61, 0x0C,
  0x17, 0x71, 0x60, 0x05, 0x61, 0x02, 0x17, 0x84, 0x0D, 0x05, 0x05, 0x70, 0x0D, 0xC8, 0x60, 0x00,
  0x05, 0xF0, 0x61, 0x01, 0x61, 0x02, 0x05, 0xF0, 0x61, 0x46, 0x07, 0x54, 0x61, 0x06, 0x58, 0x07,
  0x05, 0xF0, 0x61, 0x01, 0x00, 0xE2, 0x61, 0x41, 0x52, 0x00, 0x61, 0x0B, 0x04, 0xA0, 0xF1, 0xF0,
  0x04, 0xA0, 0x60, 0x17, 0xEA, 0xF0, 0x70, 0x65, 0x70, 0x80, 0x60, 0x00, 0xEA, 0xF0, 0x61, 0x71,
  0x08, 0x03, 0xD9, 0xF0, 0xF0, 0xF0, 0xF0,
};

extern const mamefont::Font ShapoSansP_s06c05a1(ShapoSansP_s06c05a1_blob);

#undef MAMEFONT_PROGMEM
