#pragma once

// Generated by mamec
//   Format Version: 1
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Font Height     : 8 px
//   Max Glyph Width : 7 px
//   Total Pixels    : 3656 px
//   Fragment Shape  : Vertical
//   Bit Order       : MSB First
//   Large Font      : No
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (  2.00 Bytes/glyph)
//     Frag. Table   :   64 Bytes (100.00% used)
//     Bytecodes     :  392 Bytes (  4.13 Bytes/glyph)
//     Total         :  654 Bytes (  6.88 Bytes/glyph)
//   Compression Performance:
//     CPY   :   56 -->   23 (- 7.22%)
//     LDI   :    3 -->    6 (+ 0.66%)
//     LUD   :   76 -->   38 (- 8.32%)
//     LUP   :  218 -->  218 (  0.00%)
//     RPT   :   54 -->   25 (- 6.35%)
//     SFI   :    2 -->    2 (  0.00%)
//     SFT   :   23 -->   11 (- 2.63%)
//     XOR   :   25 -->   25 (  0.00%)
//     Total :  457 -->  348 (-23.85%)
//   Memory Efficiency:  5.590 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t ShapoSansP_s08c07_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0xD0, 0x20, 0x7E, 0x1F, 0x06, 0x07, 0x20,
  // Glyph Table
  0x00, 0x11, 0x01, 0x11, 0x02, 0x12, 0x03, 0x14, 0x05, 0x14, 0x08, 0x14, 0x0B, 0x14, 0x0D, 0x11,
  0x0E, 0x13, 0x10, 0x13, 0x12, 0x14, 0x14, 0x14, 0x16, 0x11, 0x17, 0x12, 0x18, 0x11, 0x19, 0x14,
  0x1A, 0x14, 0x1C, 0x14, 0x1E, 0x14, 0x20, 0x14, 0x23, 0x14, 0x26, 0x14, 0x28, 0x14, 0x2B, 0x14,
  0x2E, 0x14, 0x30, 0x14, 0x33, 0x11, 0x34, 0x11, 0x35, 0x13, 0x37, 0x12, 0x38, 0x13, 0x3A, 0x15,
  0x3D, 0x15, 0x40, 0x15, 0x42, 0x15, 0x45, 0x15, 0x47, 0x15, 0x4A, 0x14, 0x4C, 0x14, 0x4E, 0x15,
  0x51, 0x15, 0x53, 0x12, 0x55, 0x15, 0x57, 0x15, 0x5A, 0x14, 0x5C, 0x16, 0x5F, 0x15, 0x61, 0x15,
  0x63, 0x15, 0x65, 0x15, 0x68, 0x15, 0x6B, 0x15, 0x6E, 0x16, 0x70, 0x15, 0x72, 0x15, 0x74, 0x16,
  0x77, 0x15, 0x79, 0x16, 0x7B, 0x15, 0x7E, 0x13, 0x7F, 0x14, 0x80, 0x13, 0x81, 0x14, 0x83, 0x14,
  0x84, 0x12, 0x85, 0x14, 0x87, 0x14, 0x89, 0x13, 0x8B, 0x14, 0x8D, 0x14, 0x8F, 0x13, 0x91, 0x14,
  0x94, 0x14, 0x96, 0x11, 0x97, 0x13, 0x99, 0x14, 0x9C, 0x11, 0x9D, 0x16, 0x9F, 0x14, 0xA1, 0x14,
  0xA3, 0x14, 0xA5, 0x14, 0xA7, 0x13, 0xA9, 0x14, 0xAB, 0x13, 0xAD, 0x14, 0xB0, 0x14, 0xB2, 0x16,
  0xB4, 0x14, 0xB6, 0x14, 0xB9, 0x14, 0xBC, 0x14, 0xBE, 0x10, 0xBF, 0x14, 0xC1, 0x16,
  // Fragment Table
  0x7C, 0x82, 0x22, 0x20, 0x81, 0x10, 0xFE, 0x90, 0x0C, 0x02, 0x86, 0x8A, 0x38, 0x06, 0xFF, 0x6C,
  0x92, 0x7E, 0xEF, 0xE4, 0xA2, 0x0E, 0x18, 0x66, 0xFA, 0x08, 0x98, 0xE0, 0xF0, 0x60, 0x64, 0x0A,
  0xC2, 0xCC, 0x3F, 0x14, 0x1C, 0x2A, 0xBA, 0x84, 0x7A, 0x04, 0x05, 0x28, 0x44, 0x68, 0x88, 0x3E,
  0xA0, 0x3C, 0xFC, 0x40, 0x8C, 0x65, 0x1E, 0x62, 0xC8, 0x42, 0x78, 0x24, 0xBE, 0xC3, 0x72, 0x9C,
  // Byte Code Block
  0xE1, 0xFF, 0x98, 0x98, 0xFE, 0x41, 0xAC, 0x86, 0xAC, 0x41, 0x83, 0x60, 0x54, 0x86, 0x48, 0x99,
  0xA0, 0xA1, 0x85, 0x97, 0x8A, 0xFF, 0xDF, 0xF3, 0x9E, 0x9F, 0xB0, 0xFD, 0xB1, 0x91, 0xBD, 0x84,
  0x84, 0xBD, 0x91, 0xB1, 0xAB, 0x85, 0x80, 0x69, 0xC5, 0x80, 0x49, 0xFF, 0xAA, 0x8D, 0x85, 0xE1,
  0xCD, 0xFF, 0x15, 0x06, 0xD0, 0xE1, 0x80, 0xFF, 0xE0, 0xB3, 0x86, 0x51, 0xB9, 0xDA, 0x90, 0xB7,
  0xA7, 0x90, 0xF5, 0xFD, 0xB4, 0xFF, 0x96, 0xAD, 0xAE, 0x86, 0x99, 0xFF, 0x93, 0x94, 0xE1, 0xBF,
  0xA4, 0xBE, 0x90, 0xF7, 0x88, 0xFF, 0xFE, 0xF6, 0x8A, 0x9A, 0x9B, 0xFF, 0xDF, 0xE1, 0x8F, 0xFF,
  0x9D, 0x87, 0x90, 0xBF, 0x04, 0xFF, 0x97, 0x97, 0xB5, 0x97, 0x85, 0x8C, 0x8F, 0xAC, 0xAB, 0xE1,
  0xAC, 0x8F, 0x8C, 0x85, 0xB3, 0xF7, 0x8B, 0xF4, 0x9C, 0x9D, 0xD0, 0xA6, 0xA6, 0x8B, 0xBA, 0xFF,
  0x95, 0x8C, 0xB8, 0x62, 0x86, 0x90, 0xE1, 0xBE, 0x88, 0xFF, 0xD0, 0xE2, 0xAC, 0xFF, 0x86, 0x81,
  0xE1, 0xAC, 0x8C, 0xFF, 0x86, 0x90, 0xE1, 0x81, 0xD6, 0xE1, 0xF4, 0xFF, 0xD0, 0x81, 0x90, 0xF9,
  0x60, 0x5E, 0x86, 0xC5, 0x62, 0xFF, 0x81, 0x86, 0x81, 0xFF, 0xD8, 0xE2, 0xB2, 0xFF, 0x86, 0xC5,
  0xAB, 0xAC, 0x81, 0xFF, 0x86, 0x89, 0xE2, 0xFF, 0x86, 0x9D, 0x85, 0x88, 0x6A, 0xFF, 0x86, 0xB3,
  0x22, 0x86, 0xD0, 0x81, 0x62, 0xFF, 0xD6, 0xE2, 0x9D, 0xFF, 0xD0, 0x90, 0x8B, 0xA7, 0xA8, 0xFF,
  0xD6, 0x87, 0x9A, 0xFA, 0xB7, 0xFF, 0x9E, 0x90, 0xE2, 0x60, 0x4C, 0xFF, 0xF7, 0xE1, 0x86, 0x4A,
  0xB2, 0xC9, 0x62, 0xFF, 0xFE, 0xDC, 0x62, 0xFF, 0x9C, 0x95, 0x96, 0x9D, 0x6A, 0xFF, 0x81, 0x8F,
  0x85, 0x62, 0xF7, 0x21, 0xB6, 0x6A, 0x81, 0xDA, 0x90, 0x94, 0xA0, 0xFF, 0xCE, 0xC4, 0x35, 0x26,
  0xC4, 0xCE, 0xFC, 0x01, 0x69, 0xFF, 0x89, 0xE3, 0x31, 0x9D, 0xA9, 0xA5, 0xE1, 0xB6, 0x86, 0xBB,
  0xC2, 0xA4, 0xA4, 0x82, 0xE1, 0xFF, 0xA4, 0xC2, 0xBB, 0x86, 0xA4, 0xA5, 0xE1, 0x96, 0x85, 0x91,
  0xC7, 0xFF, 0x96, 0xBB, 0xF0, 0xE0, 0xAF, 0xFF, 0x86, 0x85, 0xC3, 0xB6, 0x83, 0xBC, 0xF0, 0xF5,
  0xBC, 0x58, 0x86, 0x99, 0x99, 0xA3, 0x82, 0xFF, 0xF7, 0x86, 0xAF, 0xC3, 0xB6, 0x42, 0xAF, 0x85,
  0xC3, 0xB6, 0xA4, 0x82, 0xE1, 0xA4, 0xA2, 0xA3, 0xC2, 0xA4, 0xA4, 0xC2, 0xA3, 0xA2, 0xAF, 0x85,
  0xC3, 0xFF, 0x85, 0xA5, 0xE1, 0xA9, 0x83, 0x80, 0xC2, 0xFF, 0xB1, 0x89, 0x68, 0x00, 0xAF, 0xFF,
  0xFC, 0xD8, 0x69, 0xFF, 0xDC, 0xA9, 0x96, 0x6A, 0x82, 0xA3, 0x99, 0x69, 0x8C, 0xA9, 0xAA, 0xFA,
  0xAF, 0xFF, 0x82, 0xF2, 0xA5, 0xFB, 0x82, 0xFF, 0x85, 0x91, 0x92, 0xC4, 0x8E, 0xFF, 0xC4, 0x92,
  0x91, 0x85, 0x96, 0x00, 0xE0, 0x21, 0x61, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
