#pragma once

// Generated by mamec
//   Format Version: 1
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Font Height     : 8 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 3800 px
//   Fragment Shape  : Vertical
//   Pixel Order     : Far Pixel First
//   Pixel Format    : 1 bpp
//   Large Font      : No
//   Proportional    : No
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :   96 Bytes (  1.01 Bytes/glyph)
//     Frag. Table   :   64 Bytes (100.00% used)
//     Byte Codes    :  425 Bytes (  4.47 Bytes/glyph)
//     Total         :  593 Bytes (  6.24 Bytes/glyph)
//   Instruction Performance:
//     CPY   :   57 -->   27 (- 6.32%)
//     LDI   :    1 -->    2 (+ 0.21%)
//     LUD   :   62 -->   31 (- 6.53%)
//     LUP   :  260 -->  260 (  0.00%)
//     RPT   :   52 -->   24 (- 5.89%)
//     SFI   :    4 -->    4 (  0.00%)
//     SFT   :   16 -->    7 (- 1.89%)
//     XOR   :   23 -->   23 (  0.00%)
//     Total :  475 -->  378 (-20.42%)
//   Byte Code References:
//     Multiple References :   0 Bytes
//     No Ref (ABO)        :  47 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency:  6.408 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t ShapoSansMono_s08c07_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0xC0, 0x20, 0x7E, 0x1F, 0x04, 0x07, 0x20,
  // Glyph Table
  0x00, 0x01, 0x03, 0x05, 0x07, 0x0A, 0x0D, 0x10, 0x12, 0x15, 0x18, 0x1A, 0x1C, 0x1E, 0x20, 0x22,
  0x23, 0x25, 0x27, 0x29, 0x2C, 0x2E, 0x30, 0x32, 0x35, 0x37, 0x3A, 0x3C, 0x3F, 0x42, 0x44, 0x47,
  0x4A, 0x4D, 0x4F, 0x51, 0x53, 0x55, 0x57, 0x59, 0x5C, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x68, 0x6B,
  0x6D, 0x6F, 0x71, 0x74, 0x77, 0x79, 0x7B, 0x7D, 0x7F, 0x81, 0x83, 0x85, 0x87, 0x88, 0x8A, 0x8C,
  0x8D, 0x8F, 0x91, 0x93, 0x95, 0x97, 0x99, 0x9C, 0x9F, 0xA1, 0xA4, 0xA7, 0xAA, 0xAC, 0xAE, 0xB0,
  0xB2, 0xB4, 0xB6, 0xB8, 0xBA, 0xBC, 0xBF, 0xC1, 0xC3, 0xC5, 0xC8, 0xCB, 0xCD, 0xCF, 0xD1, 0xFF,
  // Fragment Table
  0x82, 0x22, 0x20, 0x1E, 0xFE, 0x10, 0x8A, 0x92, 0x0C, 0x02, 0x68, 0x88, 0x06, 0x18, 0x9A, 0x84,
  0x44, 0x6C, 0x04, 0x05, 0x1C, 0x2A, 0x7E, 0x90, 0x7C, 0xEE, 0x86, 0x98, 0xBE, 0x00, 0xFA, 0x60,
  0x54, 0x08, 0x3F, 0x14, 0x64, 0x0A, 0xE4, 0xA2, 0xC2, 0xCC, 0x3E, 0x42, 0x3C, 0x70, 0x32, 0x5E,
  0x28, 0xF8, 0x38, 0xFC, 0x62, 0xE0, 0x66, 0xBA, 0x24, 0xA0, 0x9C, 0xFF, 0x7A, 0x78, 0x8C, 0x72,
  // Byte Code Block
  0xE4, 0xFF, 0x9D, 0x9E, 0x62, 0xFF, 0x9D, 0xFE, 0x9D, 0x41, 0x90, 0x84, 0x90, 0x41, 0x82, 0xA0,
  0x84, 0xA0, 0xA1, 0xFF, 0xA8, 0xA9, 0x85, 0xB6, 0x9A, 0xFF, 0x91, 0x87, 0x8E, 0xA4, 0xA5, 0xFF,
  0x9D, 0xB9, 0xFD, 0x51, 0x9D, 0x98, 0x84, 0x80, 0x9D, 0xFF, 0x9D, 0x80, 0x84, 0x98, 0x9D, 0xFF,
  0xB0, 0x85, 0x98, 0x69, 0xC5, 0x98, 0x49, 0xFF, 0x9D, 0x93, 0x8C, 0x51, 0x9D, 0x85, 0xE1, 0x9D,
  0x9D, 0x8C, 0x62, 0xFF, 0x15, 0x06, 0x98, 0xD6, 0xA7, 0x98, 0x9D, 0xF6, 0x84, 0x51, 0xAB, 0x9A,
  0xD6, 0xB4, 0x8F, 0x87, 0xF5, 0xFD, 0xBE, 0xFF, 0x8D, 0xDA, 0x84, 0xA1, 0xA6, 0xA7, 0xE1, 0xBA,
  0x94, 0xAE, 0xFD, 0xD7, 0xFE, 0xF6, 0x9A, 0x9B, 0xB5, 0xFF, 0x91, 0x87, 0xE1, 0x91, 0x9F, 0x87,
  0xF9, 0x9B, 0xAD, 0xFF, 0x9D, 0xB6, 0x62, 0xFF, 0x9D, 0x60, 0x65, 0xB6, 0x51, 0xFF, 0x85, 0xB2,
  0x91, 0x90, 0x9D, 0xFF, 0x9D, 0xB0, 0xE1, 0x9D, 0x9D, 0x90, 0x91, 0xB2, 0x85, 0xFF, 0xF6, 0xF7,
  0x8E, 0x9E, 0x9F, 0xFF, 0x98, 0x80, 0xB7, 0x86, 0xBD, 0xFF, 0x83, 0xDA, 0x69, 0xFF, 0x84, 0xC7,
  0xBF, 0x88, 0x98, 0x80, 0xE1, 0x90, 0x84, 0xC0, 0x90, 0xB2, 0x84, 0x87, 0xE1, 0x80, 0x84, 0x97,
  0xE1, 0xF4, 0x98, 0x80, 0x87, 0xF9, 0xAF, 0xFF, 0xD4, 0xE1, 0x84, 0xFF, 0x9D, 0x80, 0x84, 0x69,
  0xD8, 0xE1, 0xB3, 0xFF, 0xD4, 0xB0, 0x90, 0x80, 0x84, 0x89, 0xE2, 0xFF, 0x84, 0x9F, 0x8D, 0x69,
  0x84, 0x9F, 0x85, 0x88, 0x84, 0xFF, 0x98, 0x80, 0xE1, 0x98, 0x84, 0x97, 0xE1, 0x9F, 0x98, 0x80,
  0xDE, 0xBC, 0x84, 0x97, 0x9B, 0xFA, 0xB4, 0xFF, 0x90, 0xA7, 0x87, 0x86, 0x90, 0xFF, 0xF7, 0xE0,
  0x84, 0x49, 0xB3, 0x89, 0xE1, 0xB3, 0xB5, 0x8D, 0x8C, 0x69, 0xB1, 0x8C, 0xB2, 0x69, 0x80, 0x91,
  0x85, 0x69, 0xFE, 0xD2, 0x69, 0xFF, 0x9A, 0xD6, 0xA7, 0xA8, 0x9D, 0xC4, 0xC0, 0xFF, 0x35, 0x26,
  0xC0, 0xC4, 0x9D, 0xFF, 0x82, 0x01, 0x69, 0xFF, 0x89, 0xE3, 0xE1, 0x31, 0x9F, 0xFF, 0x92, 0x95,
  0xE1, 0x83, 0x84, 0xB8, 0xC1, 0x94, 0x94, 0x81, 0xE1, 0x9D, 0x94, 0xC1, 0xB8, 0x84, 0x94, 0x95,
  0xE1, 0x8D, 0x85, 0x96, 0x97, 0x97, 0xFE, 0xFF, 0x8D, 0xB8, 0xF0, 0xE0, 0xAA, 0xFF, 0xD4, 0xC2,
  0x83, 0xFF, 0x9D, 0x81, 0x9C, 0x89, 0x9D, 0xFF, 0x89, 0xF8, 0xF5, 0x9C, 0x9D, 0xFF, 0x84, 0xA1,
  0xA1, 0xA3, 0x81, 0xFF, 0x68, 0x30, 0x84, 0x51, 0xAA, 0xD2, 0x41, 0xFF, 0xAA, 0x85, 0xC2, 0x83,
  0x94, 0x81, 0xE1, 0x94, 0xA2, 0xA3, 0xC1, 0x94, 0x94, 0xC1, 0xA3, 0xA2, 0xAA, 0x85, 0x82, 0x61,
  0x85, 0x95, 0xE1, 0x92, 0x82, 0x98, 0xC1, 0x92, 0xAC, 0x89, 0x68, 0x00, 0xAA, 0xFF, 0xFC, 0xD8,
  0x69, 0xFF, 0xB2, 0xDC, 0x69, 0xFF, 0x81, 0xA3, 0xA1, 0x69, 0xB2, 0x92, 0x93, 0xFA, 0xAA, 0xFF,
  0x81, 0xF2, 0x95, 0xAE, 0x81, 0xFF, 0x85, 0x98, 0x99, 0xC0, 0xE1, 0xBB, 0x49, 0xFF, 0xC0, 0x99,
  0x98, 0x85, 0x85, 0x82, 0x21, 0x85, 0xFF, 0xFF, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
