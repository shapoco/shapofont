#pragma once

// Generated by mamec
//   Format Version: 1
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Font Height     : 12 px
//   Max Glyph Width : 10 px
//   Total Pixels    : 6804 px
//   Fragment Shape  : Horizontal
//   Bit Order       : MSB First
//   Large Font      : Yes
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  380 Bytes (  4.00 Bytes/glyph)
//     Frag. Table   :   54 Bytes ( 84.38% used)
//     Bytecodes     :  609 Bytes (  6.41 Bytes/glyph)
//     Total         : 1051 Bytes ( 11.06 Bytes/glyph)
//   Compression Performance:
//     CPX   :    4 -->    1 (- 0.26%)
//     CPY   :  269 -->   63 (-17.52%)
//     LUD   :  152 -->   76 (- 6.46%)
//     LUP   :  301 -->  301 (  0.00%)
//     RPT   :  277 -->   72 (-17.43%)
//     SFI   :   41 -->   11 (- 2.55%)
//     SFT   :  119 -->   59 (- 5.10%)
//     XOR   :   13 -->   13 (  0.00%)
//     Total : 1176 -->  596 (-49.32%)
//   Memory Efficiency:  6.474 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t ShapoSansP_s12c09a01w02_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x70, 0x20, 0x7E, 0x1A, 0x09, 0x0B, 0x20,
  // Glyph Table
  0x00, 0x00, 0x03, 0x11, 0x01, 0x00, 0x01, 0x11, 0x06, 0x00, 0x04, 0x11, 0x0B, 0x00, 0x06, 0x11,
  0x10, 0x00, 0x07, 0x11, 0x18, 0x00, 0x09, 0x11, 0x26, 0x00, 0x07, 0x11, 0x2F, 0x00, 0x02, 0x11,
  0x33, 0x00, 0x03, 0x11, 0x39, 0x00, 0x03, 0x11, 0x3E, 0x00, 0x07, 0x11, 0x43, 0x00, 0x05, 0x11,
  0x47, 0x00, 0x02, 0x11, 0x4B, 0x00, 0x04, 0x11, 0x4E, 0x00, 0x02, 0x11, 0x51, 0x00, 0x04, 0x11,
  0x59, 0x00, 0x05, 0x11, 0x5E, 0x00, 0x05, 0x11, 0x65, 0x00, 0x05, 0x11, 0x6C, 0x00, 0x05, 0x11,
  0x75, 0x00, 0x05, 0x11, 0x7E, 0x00, 0x05, 0x11, 0x86, 0x00, 0x05, 0x11, 0x8E, 0x00, 0x05, 0x11,
  0x95, 0x00, 0x05, 0x11, 0x9B, 0x00, 0x05, 0x11, 0xA2, 0x00, 0x02, 0x11, 0xA6, 0x00, 0x02, 0x11,
  0xAB, 0x00, 0x04, 0x11, 0xAF, 0x00, 0x04, 0x11, 0xB3, 0x00, 0x04, 0x11, 0xB7, 0x00, 0x05, 0x11,
  0xC1, 0x00, 0x07, 0x11, 0xCB, 0x00, 0x06, 0x11, 0xD4, 0x00, 0x06, 0x11, 0xDA, 0x00, 0x06, 0x11,
  0xE0, 0x00, 0x06, 0x11, 0xE7, 0x00, 0x05, 0x11, 0xED, 0x00, 0x05, 0x11, 0xF4, 0x00, 0x07, 0x11,
  0xFD, 0x00, 0x06, 0x11, 0x03, 0x01, 0x03, 0x11, 0x08, 0x01, 0x06, 0x11, 0x0F, 0x01, 0x06, 0x11,
  0x16, 0x01, 0x05, 0x11, 0x1B, 0x01, 0x09, 0x11, 0x26, 0x01, 0x06, 0x11, 0x30, 0x01, 0x07, 0x11,
  0x36, 0x01, 0x06, 0x11, 0x3D, 0x01, 0x07, 0x11, 0x47, 0x01, 0x06, 0x11, 0x50, 0x01, 0x06, 0x11,
  0x58, 0x01, 0x07, 0x11, 0x5E, 0x01, 0x07, 0x11, 0x64, 0x01, 0x07, 0x11, 0x6B, 0x01, 0x09, 0x11,
  0x78, 0x01, 0x07, 0x11, 0x7D, 0x01, 0x07, 0x11, 0x84, 0x01, 0x06, 0x11, 0x8B, 0x01, 0x03, 0x11,
  0x8F, 0x01, 0x04, 0x11, 0x97, 0x01, 0x03, 0x11, 0x9B, 0x01, 0x05, 0x11, 0xA1, 0x01, 0x05, 0x11,
  0xA4, 0x01, 0x03, 0x11, 0xA9, 0x01, 0x05, 0x11, 0xB0, 0x01, 0x05, 0x11, 0xB8, 0x01, 0x04, 0x11,
  0xBC, 0x01, 0x05, 0x11, 0xC3, 0x01, 0x05, 0x11, 0xCA, 0x01, 0x04, 0x11, 0xD2, 0x01, 0x05, 0x11,
  0xDA, 0x01, 0x05, 0x11, 0xE1, 0x01, 0x02, 0x11, 0xE7, 0x01, 0x02, 0x11, 0xEC, 0x01, 0x05, 0x11,
  0xF4, 0x01, 0x02, 0x11, 0xF9, 0x01, 0x07, 0x11, 0xFF, 0x01, 0x05, 0x11, 0x06, 0x02, 0x05, 0x11,
  0x0A, 0x02, 0x05, 0x11, 0x10, 0x02, 0x05, 0x11, 0x16, 0x02, 0x04, 0x11, 0x1D, 0x02, 0x05, 0x11,
  0x23, 0x02, 0x04, 0x11, 0x2A, 0x02, 0x05, 0x11, 0x30, 0x02, 0x05, 0x11, 0x36, 0x02, 0x07, 0x11,
  0x3D, 0x02, 0x05, 0x11, 0x42, 0x02, 0x06, 0x11, 0x49, 0x02, 0x05, 0x11, 0x4E, 0x02, 0x04, 0x11,
  0x53, 0x02, 0x01, 0x11, 0x56, 0x02, 0x04, 0x11, 0x5B, 0x02, 0x07, 0x11,
  // Fragment Table
  0x00, 0xFC, 0xCC, 0x7E, 0x3C, 0xC0, 0xC6, 0xC3, 0x60, 0x66, 0x6C, 0x18, 0x30, 0x7F, 0x3B, 0xE0,
  0xCF, 0xB6, 0xFF, 0xE1, 0xED, 0xCD, 0xF3, 0xDE, 0xDB, 0xD8, 0xF8, 0xCE, 0xDC, 0x1B, 0x1E, 0x33,
  0x38, 0x0C, 0x0E, 0x9F, 0x78, 0x7C, 0xFE, 0x3E, 0x63, 0x70, 0x1C, 0x49, 0xEE, 0x74, 0xE7, 0x76,
  0x36, 0x73, 0x0D, 0x84, 0x7B, 0x00,
  // Byte Code Block
  0xEB, 0x80, 0x36, 0x63, 0x42, 0x80, 0x99, 0x99, 0xAB, 0x0D, 0xE6, 0x80, 0xCA, 0xA6, 0x49, 0x6D,
  0x80, 0x8B, 0x83, 0x98, 0x99, 0x83, 0x9D, 0x7C, 0x80, 0xB1, 0x98, 0x97, 0xAF, 0xA1, 0x9D, 0x9E,
  0xB0, 0x9F, 0x80, 0xE6, 0x31, 0x63, 0x80, 0xA0, 0x8A, 0x61, 0xB4, 0x97, 0x82, 0x69, 0xC0, 0x39,
  0xA5, 0x0D, 0xE6, 0x8C, 0x88, 0x8F, 0x85, 0xE1, 0x6D, 0x95, 0x19, 0xF6, 0xE1, 0x6D, 0xE1, 0x8B,
  0x98, 0xD3, 0x6D, 0xE2, 0xCC, 0x81, 0x6D, 0xE7, 0x39, 0xA5, 0x85, 0xE4, 0x9A, 0x4D, 0xE7, 0x39,
  0x51, 0x8B, 0x68, 0x00, 0xE1, 0x68, 0x88, 0x85, 0x80, 0x80, 0xA4, 0xD1, 0xE1, 0x6D, 0x80, 0x8C,
  0xA9, 0xF7, 0x8C, 0xE4, 0x0D, 0x80, 0xA4, 0xD1, 0xAA, 0x02, 0x39, 0xC0, 0xD0, 0xF9, 0x8C, 0xA4,
  0x81, 0x2C, 0x90, 0x71, 0xC0, 0x80, 0x8C, 0x68, 0x00, 0x88, 0x99, 0x3D, 0xCB, 0x29, 0xD0, 0x81,
  0x85, 0x39, 0xA1, 0x1D, 0xA4, 0xC0, 0x80, 0x8C, 0x68, 0x00, 0xA4, 0xD1, 0x62, 0xC0, 0xD0, 0xD1,
  0x28, 0x68, 0x40, 0xE1, 0x2D, 0x80, 0xA4, 0xD1, 0x69, 0x82, 0x7C, 0x80, 0xA4, 0xD1, 0x62, 0x8B,
  0x9F, 0x0E, 0xE2, 0x39, 0x51, 0x44, 0xE2, 0x39, 0x44, 0xA5, 0x85, 0xE1, 0x8B, 0x02, 0x6D, 0xE3,
  0x9A, 0x80, 0x65, 0xE1, 0x85, 0x22, 0x6D, 0x80, 0xA4, 0xA6, 0x9B, 0xA2, 0x8E, 0x9F, 0xFC, 0x9F,
  0x0E, 0x80, 0xA7, 0xA8, 0x90, 0x98, 0xE1, 0x90, 0x88, 0xA7, 0xC0, 0x80, 0xA0, 0xA0, 0xCA, 0x86,
  0xA6, 0x61, 0x86, 0xC0, 0xD0, 0x92, 0x86, 0x69, 0x86, 0x7C, 0x80, 0x84, 0x83, 0xAE, 0xC5, 0x6D,
  0x80, 0x9A, 0x81, 0x90, 0xF3, 0xE0, 0x6D, 0xD0, 0x81, 0x85, 0x9A, 0x61, 0x7C, 0xD0, 0x81, 0xC5,
  0x9A, 0x61, 0xE1, 0x05, 0x80, 0xA7, 0x83, 0xDF, 0x90, 0x87, 0xAE, 0xDD, 0xC0, 0x80, 0x86, 0xE1,
  0xA6, 0x61, 0x7C, 0x80, 0x3D, 0x88, 0xE1, 0x6D, 0x80, 0xF9, 0xE4, 0x9B, 0x81, 0xA4, 0xC0, 0x80,
  0x86, 0x9B, 0x9C, 0x9A, 0xF3, 0x6D, 0x80, 0x85, 0xE5, 0x3D, 0xC0, 0x80, 0x93, 0x93, 0x96, 0x96,
  0x97, 0x97, 0xC2, 0x0F, 0x5C, 0x6D, 0x80, 0xC6, 0xF5, 0xF4, 0xA6, 0x97, 0x9B, 0x40, 0x09, 0x40,
  0x80, 0x84, 0x83, 0xAE, 0xC7, 0x6D, 0xD0, 0x92, 0x86, 0x62, 0x85, 0xE1, 0x05, 0x80, 0x84, 0x83,
  0xAE, 0x87, 0x98, 0xF2, 0xAC, 0xDD, 0xC0, 0xD0, 0x92, 0xC6, 0x81, 0x9A, 0x9C, 0x90, 0xF3, 0xC0,
  0x80, 0xA5, 0xA6, 0x86, 0x34, 0xA5, 0x24, 0x7C, 0x80, 0x92, 0x92, 0x8B, 0xE5, 0xC0, 0x80, 0x87,
  0xE4, 0xAE, 0xD3, 0xC0, 0x80, 0x87, 0xE1, 0xC9, 0xC4, 0xCB, 0xC0, 0x80, 0xC5, 0x82, 0x94, 0xF7,
  0xCD, 0x9F, 0x9F, 0x80, 0xE1, 0x8F, 0x68, 0x4A, 0x80, 0xC7, 0x89, 0xD3, 0x6D, 0x80, 0xC7, 0xAE,
  0xD3, 0x8B, 0xE2, 0xC0, 0x80, 0xA6, 0xA6, 0xA2, 0x03, 0x3D, 0xC0, 0x3C, 0x85, 0xE3, 0x6D, 0x85,
  0x68, 0x20, 0xE1, 0x68, 0xA8, 0x8B, 0x80, 0x3C, 0x8C, 0xE3, 0x6D, 0x8C, 0xA4, 0x82, 0xB3, 0x80,
  0xE6, 0xE8, 0x81, 0x49, 0xAE, 0x68, 0x20, 0x0D, 0xE6, 0xE3, 0xA4, 0x28, 0xA5, 0x1D, 0xAD, 0xC0,
  0x80, 0x85, 0xE1, 0x99, 0x3C, 0x95, 0x62, 0xC0, 0xE3, 0x8D, 0x09, 0x64, 0x80, 0xA1, 0xE1, 0x8A,
  0xD1, 0x62, 0xC0, 0xE3, 0xA4, 0x81, 0x1D, 0x85, 0xA4, 0xC0, 0x80, 0xA0, 0xA4, 0x88, 0x9A, 0x61,
  0xE2, 0x09, 0xE3, 0xAD, 0x81, 0x1D, 0x8D, 0x28, 0x8D, 0xF9, 0x80, 0x85, 0xE1, 0x39, 0x90, 0xE2,
  0xC0, 0x80, 0xC8, 0x1E, 0x88, 0xE2, 0x25, 0xB2, 0x19, 0x42, 0xE3, 0x09, 0x80, 0x85, 0xE1, 0x82,
  0x9C, 0x38, 0x62, 0xC0, 0x80, 0x39, 0xA5, 0xE5, 0x25, 0xE3, 0x91, 0x92, 0x98, 0xE2, 0xC0, 0xE3,
  0x99, 0x3C, 0x94, 0x95, 0xE1, 0xC0, 0xE3, 0xA4, 0xD1, 0x64, 0xE3, 0x99, 0x3C, 0x95, 0x62, 0xC5,
  0xE3, 0x8A, 0xD1, 0x62, 0xA1, 0xA1, 0xE3, 0x99, 0x9A, 0x8F, 0x85, 0xE1, 0x05, 0xE3, 0xA4, 0x9B,
  0xA9, 0xAA, 0x73, 0xE1, 0xC8, 0x9A, 0x62, 0xA4, 0xA0, 0x29, 0xE3, 0x82, 0xE2, 0x81, 0x8A, 0xC0,
  0xE3, 0xC2, 0xA4, 0xA4, 0x9F, 0x0E, 0xE3, 0x87, 0x98, 0x98, 0x92, 0xC9, 0xC0, 0xE3, 0x82, 0x81,
  0xA4, 0x64, 0xE3, 0xC6, 0x8A, 0xA5, 0xA0, 0xDB, 0x8C, 0xE3, 0xC1, 0xA0, 0xA9, 0x73, 0xA0, 0x88,
  0x68, 0x80, 0x6D, 0x85, 0xE4, 0x6D, 0x8F, 0x8C, 0x68, 0xA0, 0x6D, 0xE3, 0xA2, 0xA3, 0x3C, 0xA9,
  0x0F
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
