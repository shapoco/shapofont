#pragma once

// Generated by mamec
//   Format Version: 1
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Font Height     : 5 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 1690 px
//   Fragment Shape  : Horizontal
//   Bit Order       : MSB First
//   Large Font      : No
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (  2.00 Bytes/glyph)
//     Frag. Table   :   40 Bytes ( 62.50% used)
//     Byte Codes    :  339 Bytes (  3.57 Bytes/glyph)
//     Total         :  577 Bytes (  6.07 Bytes/glyph)
//   Instruction Performance:
//     CPY   :   74 -->   42 (- 6.74%)
//     LUD   :   42 -->   21 (- 4.42%)
//     LUP   :  137 -->  137 (  0.00%)
//     RPT   :   64 -->   35 (- 6.11%)
//     SFI   :   13 -->    6 (- 1.47%)
//     SFT   :  127 -->   69 (-12.21%)
//     XOR   :   18 -->   18 (  0.00%)
//     Total :  475 -->  328 (-30.95%)
//   Byte Code References:
//     Multiple References :  29 Bytes
//     No Ref (ABO)        :  40 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency:  2.929 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t ShapoSansP_s05_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x50, 0x20, 0x7E, 0x13, 0x04, 0x04, 0x10,
  // Glyph Table
  0x00, 0x12, 0x01, 0x10, 0x02, 0x12, 0x03, 0x14, 0x05, 0x14, 0x07, 0x14, 0x0A, 0x14, 0x02, 0x10,
  0x0D, 0x11, 0x0F, 0x11, 0x11, 0x14, 0x13, 0x14, 0x15, 0x10, 0x16, 0x12, 0x18, 0x10, 0x19, 0x14,
  0x1A, 0x13, 0x1C, 0x13, 0x1E, 0x13, 0x20, 0x13, 0x22, 0x13, 0x24, 0x13, 0x27, 0x13, 0x29, 0x13,
  0x2B, 0x13, 0x2D, 0x13, 0x1E, 0x10, 0x2F, 0x10, 0x30, 0x12, 0x32, 0x11, 0x33, 0x12, 0x35, 0x12,
  0x37, 0x13, 0x39, 0x13, 0x3B, 0x13, 0x1A, 0x12, 0x3D, 0x13, 0x3B, 0x12, 0x3F, 0x12, 0x41, 0x13,
  0x44, 0x13, 0x3B, 0x10, 0x46, 0x13, 0x48, 0x13, 0x4A, 0x12, 0x4C, 0x14, 0x4E, 0x13, 0x50, 0x14,
  0x52, 0x13, 0x54, 0x14, 0x56, 0x13, 0x58, 0x13, 0x5B, 0x12, 0x5D, 0x13, 0x5F, 0x14, 0x61, 0x14,
  0x63, 0x14, 0x65, 0x14, 0x67, 0x13, 0x3D, 0x11, 0x69, 0x14, 0x6A, 0x11, 0x6B, 0x12, 0x6C, 0x12,
  0x69, 0x11, 0x6D, 0x13, 0x6F, 0x13, 0x71, 0x12, 0x73, 0x13, 0x75, 0x13, 0x77, 0x12, 0x79, 0x13,
  0x7B, 0x13, 0x7D, 0x10, 0x7E, 0x12, 0x80, 0x13, 0x5B, 0x11, 0x83, 0x14, 0x85, 0x13, 0x87, 0x13,
  0x89, 0x13, 0x8C, 0x13, 0x8F, 0x12, 0x91, 0x13, 0x93, 0x12, 0x95, 0x13, 0x97, 0x14, 0x99, 0x14,
  0x9B, 0x13, 0x9D, 0x13, 0xA0, 0x13, 0xA2, 0x12, 0x3B, 0x10, 0xA4, 0x12, 0xA6, 0x14,
  // Fragment Table
  0x50, 0x20, 0x88, 0x60, 0x90, 0x80, 0xA8, 0x98, 0x9A, 0x70, 0xA0, 0x10, 0x67, 0x53, 0xC5, 0x66,
  0x24, 0x4A, 0xD0, 0x6B, 0xBA, 0x72, 0x0E, 0x68, 0x78, 0x40, 0xF8, 0x06, 0x93, 0x08, 0x33, 0x86,
  0x28, 0xC9, 0x27, 0xEA, 0x8A, 0xE8, 0xD5, 0xD8,
  // Byte Code Block
  0xE4, 0xFF, 0x32, 0x51, 0x8A, 0x63, 0x80, 0x9A, 0x80, 0x41, 0xD9, 0x89, 0xA0, 0x89, 0xA5, 0xFB,
  0x81, 0x98, 0x87, 0xFF, 0x38, 0x86, 0x97, 0x84, 0x97, 0xFF, 0x80, 0x68, 0x48, 0xFF, 0x8A, 0x68,
  0x48, 0xFF, 0x81, 0x86, 0x89, 0x69, 0xC1, 0x9A, 0x49, 0xFF, 0xE2, 0x31, 0xE1, 0x38, 0x49, 0xFF,
  0x68, 0xF0, 0x9D, 0x03, 0xD3, 0xE1, 0x83, 0xFF, 0x81, 0x83, 0x81, 0xE1, 0xD3, 0x90, 0x1D, 0xFF,
  0x38, 0x28, 0x48, 0x41, 0xFC, 0x8D, 0x19, 0x28, 0x3C, 0x85, 0xFD, 0x28, 0x48, 0xFF, 0x83, 0x9F,
  0xFD, 0x05, 0x3C, 0x84, 0x8B, 0xC1, 0x8F, 0x05, 0x41, 0xFF, 0x8C, 0x05, 0xDB, 0xFF, 0x8B, 0x1B,
  0x81, 0x01, 0x69, 0xFF, 0x9E, 0x07, 0x85, 0x21, 0x69, 0xFF, 0x8E, 0x0A, 0x99, 0xFF, 0x83, 0x30,
  0xF0, 0x19, 0x83, 0x9C, 0x19, 0x48, 0x38, 0x84, 0x48, 0x41, 0x38, 0x84, 0xE1, 0x58, 0x38, 0x85,
  0x41, 0x85, 0x83, 0x85, 0xFC, 0x84, 0x89, 0xFF, 0x9C, 0x19, 0x49, 0xFF, 0xFB, 0xE1, 0x87, 0x83,
  0x84, 0x8A, 0xFD, 0x69, 0x85, 0xE2, 0xFD, 0xFF, 0x82, 0xA7, 0x86, 0xC2, 0x88, 0x19, 0xC8, 0xFF,
  0x89, 0x82, 0xE1, 0x89, 0x38, 0x84, 0x48, 0xC5, 0x89, 0x82, 0xD6, 0x98, 0x38, 0x84, 0x41, 0x84,
  0x89, 0x85, 0x83, 0x24, 0x38, 0xFF, 0x38, 0x99, 0xE2, 0xFF, 0x87, 0xE2, 0x83, 0xFF, 0x82, 0xE1,
  0xD0, 0xFF, 0xA4, 0xF5, 0x1D, 0x80, 0x82, 0xD0, 0x69, 0xFF, 0xC2, 0xD0, 0x81, 0xFF, 0x3C, 0x81,
  0x01, 0x58, 0x85, 0x23, 0xA6, 0x17, 0x91, 0x0F, 0xE3, 0x38, 0xF0, 0xFD, 0x1E, 0xFF, 0x85, 0xFD,
  0x84, 0x61, 0x96, 0x09, 0x61, 0xFF, 0xFB, 0x98, 0x84, 0x61, 0x9B, 0x1D, 0x85, 0x50, 0x97, 0x1D,
  0x48, 0xE0, 0xE0, 0x3D, 0x28, 0x83, 0xC5, 0xFD, 0xC4, 0xFF, 0xFE, 0x1F, 0xA2, 0x41, 0x09, 0xFF,
  0x85, 0x87, 0x86, 0xA5, 0x87, 0xFF, 0xE0, 0x92, 0x86, 0xE1, 0xE0, 0x38, 0x84, 0xE1, 0xE0, 0xD3,
  0x61, 0xFF, 0xE0, 0x38, 0x84, 0x48, 0x85, 0xFF, 0xE0, 0x89, 0x84, 0x89, 0x8B, 0xFF, 0xE0, 0x94,
  0x09, 0x85, 0xE0, 0x98, 0x19, 0x38, 0x82, 0x38, 0xFD, 0x19, 0xE0, 0x84, 0xE1, 0x89, 0xE0, 0xC2,
  0xD0, 0xFF, 0xE0, 0xA4, 0x1D, 0x80, 0xE0, 0x87, 0x83, 0x61, 0xE0, 0x84, 0x98, 0xFD, 0x83, 0xFF,
  0xE0, 0x3C, 0x90, 0x1D, 0x93, 0x09, 0x69, 0xFF, 0xA1, 0x19, 0x69, 0xFF, 0xE0, 0x99, 0x86, 0x29,
  0xFF, 0xFF, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
