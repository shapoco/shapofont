#pragma once

// Generated by mamec
//   Format Version: 0
//   First Code      : ' ' (0x20)
//   Last Code       : '~' (0x7E)
//   Max Glyph Width : 10 px
//   Font Height     : 15 px
//   Total Pixels    : 9435 px
//   Fragment Shape  : Horizontal
//   Pixel Order     : Far Pixel First
//   Pixel Format    : 1 bpp
//   Large Font      : Yes
//   Proportional    : Yes
//   Ext. Header     : No
//   Estimated Footprint:
//     Header        :   12 Bytes
//     Glyph Table   :  380 Bytes (  4.00 Bytes/glyph)
//     Frag. Table   :   64 Bytes (100.00% used)
//     Byte Codes    :  572 Bytes (  6.02 Bytes/glyph)
//     Total         : 1028 Bytes ( 10.82 Bytes/glyph)
//   Instruction Performance:
//     CPX   :   12 -->    9 (- 0.25%)
//     CPY   :  270 -->   61 (-17.52%)
//     LDI   :   12 -->   24 (+ 1.01%)
//     LUD   :  124 -->   62 (- 5.20%)
//     LUP   :  278 -->  278 (  0.00%)
//     RPT   :  309 -->   82 (-19.03%)
//     SFI   :   99 -->   48 (- 4.27%)
//     SFT   :   68 -->   28 (- 3.35%)
//     XOR   :   21 -->   21 (  0.00%)
//     Total : 1193 -->  613 (-48.62%)
//   Byte Code References:
//     Multiple References :  44 Bytes
//     No Ref (ABO)        :   3 Bytes
//     No Ref (Unexpected) :   0 Bytes
//   Memory Efficiency:  9.178 px/Byte

#include <stdint.h>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#endif

#ifndef MAMEFONT_PROGMEM
#ifdef PROGMEM
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif
#define MAMEFONT_PROGMEM_SELF_DEFINED
#endif

const uint8_t MameSansP_s15c12_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x00, 0x46, 0x20, 0x7E, 0x09, 0x0E, 0x21, 0x03, 0x00, 0x04, 0x0B, 0x1F,
  // Glyph Table
  0x06, 0xC1, 0x03, 0x00, 0x00, 0x80, 0x00, 0x00, 0x03, 0x80, 0x04, 0x00, 0x09, 0x80, 0x07, 0x00,
  0x12, 0x80, 0x06, 0x00, 0x1E, 0x80, 0x07, 0x00, 0x2B, 0x80, 0x08, 0x00, 0x03, 0x80, 0x01, 0x00,
  0x38, 0x80, 0x02, 0x00, 0x3D, 0x80, 0x02, 0x00, 0x42, 0x80, 0x06, 0x00, 0x48, 0x80, 0x06, 0x00,
  0x4D, 0x40, 0x01, 0x00, 0x50, 0xC0, 0x06, 0x00, 0x53, 0xC0, 0x01, 0x00, 0x55, 0x80, 0x05, 0x00,
  0x59, 0x80, 0x07, 0x00, 0x5D, 0x80, 0x07, 0x00, 0x63, 0x80, 0x07, 0x00, 0x68, 0x80, 0x07, 0x00,
  0x71, 0x80, 0x07, 0x00, 0x7B, 0x80, 0x07, 0x00, 0x86, 0x80, 0x07, 0x00, 0x8F, 0x80, 0x07, 0x00,
  0x97, 0x80, 0x07, 0x00, 0x9C, 0x80, 0x07, 0x00, 0xA4, 0xC0, 0x01, 0x00, 0xA6, 0x40, 0x01, 0x00,
  0xAA, 0x80, 0x07, 0x00, 0xAE, 0xC0, 0x06, 0x00, 0xB1, 0x80, 0x07, 0x00, 0xB5, 0x80, 0x07, 0x00,
  0xBB, 0x80, 0x09, 0x00, 0xCA, 0x80, 0x09, 0x00, 0xDB, 0x80, 0x07, 0x00, 0x2C, 0x81, 0x07, 0x00,
  0xE3, 0x80, 0x07, 0x00, 0xE9, 0x80, 0x06, 0x00, 0xEE, 0x80, 0x06, 0x00, 0xF3, 0x80, 0x08, 0x00,
  0x01, 0x81, 0x07, 0x00, 0x14, 0x81, 0x00, 0x00, 0x06, 0x81, 0x07, 0x00, 0x0B, 0x81, 0x07, 0x00,
  0x11, 0x81, 0x06, 0x00, 0x14, 0x81, 0x09, 0x00, 0x22, 0x81, 0x07, 0x00, 0x2C, 0x81, 0x08, 0x00,
  0x33, 0x81, 0x07, 0x00, 0x39, 0x81, 0x09, 0x00, 0x48, 0x81, 0x07, 0x00, 0x4F, 0x81, 0x07, 0x00,
  0x5A, 0x81, 0x08, 0x00, 0x5F, 0x81, 0x07, 0x00, 0x63, 0x81, 0x07, 0x00, 0x6B, 0x81, 0x09, 0x00,
  0x75, 0x81, 0x07, 0x00, 0x7B, 0x81, 0x08, 0x00, 0x85, 0x81, 0x07, 0x00, 0xE3, 0x80, 0x03, 0x00,
  0x8D, 0x81, 0x05, 0x00, 0x91, 0x81, 0x03, 0x00, 0x95, 0x81, 0x06, 0x00, 0x9B, 0xC1, 0x05, 0x00,
  0x9D, 0x81, 0x02, 0x00, 0xA1, 0xC1, 0x06, 0x00, 0xAA, 0x81, 0x06, 0x00, 0xAF, 0xC1, 0x06, 0x00,
  0xB3, 0x81, 0x06, 0x00, 0xB8, 0xC1, 0x06, 0x00, 0xBE, 0x81, 0x04, 0x00, 0xC4, 0x41, 0x06, 0x00,
  0xCA, 0x81, 0x06, 0x00, 0xCF, 0x81, 0x01, 0x00, 0xD3, 0x01, 0x03, 0x10, 0xDA, 0x81, 0x05, 0x00,
  0xE1, 0x81, 0x01, 0x00, 0xE4, 0xC1, 0x08, 0x00, 0xEA, 0xC1, 0x06, 0x00, 0xED, 0xC1, 0x07, 0x00,
  0xF0, 0x41, 0x06, 0x00, 0xF5, 0x41, 0x06, 0x00, 0xFA, 0xC1, 0x04, 0x00, 0xFF, 0xC1, 0x06, 0x00,
  0x07, 0x82, 0x04, 0x00, 0x0E, 0xC2, 0x06, 0x00, 0x1E, 0xC2, 0x06, 0x00, 0x12, 0xC2, 0x08, 0x00,
  0x1A, 0xC2, 0x07, 0x00, 0x1E, 0x42, 0x06, 0x00, 0x25, 0xC2, 0x05, 0x00, 0x2A, 0x82, 0x03, 0x00,
  0x14, 0x81, 0x00, 0x00, 0x2F, 0x82, 0x03, 0x00, 0x34, 0xC2, 0x06, 0x00,
  // Fragment Table
  0x81, 0x82, 0x3C, 0x42, 0x61, 0x40, 0xB8, 0xC4, 0x3A, 0x46, 0xA1, 0x63, 0x41, 0x28, 0x10, 0xFE,
  0x80, 0x44, 0x22, 0x92, 0x8C, 0xC2, 0x01, 0x02, 0x12, 0x08, 0x00, 0xC1, 0x70, 0x1C, 0x71, 0x8A,
  0xFC, 0x04, 0xF8, 0x84, 0x1E, 0xD6, 0x24, 0x54, 0x38, 0x0C, 0x94, 0x55, 0x20, 0x7C, 0x52, 0x14,
  0x3E, 0xBC, 0x62, 0x50, 0x48, 0x18, 0x86, 0x9A, 0xFF, 0xB3, 0xE0, 0xC9, 0xD8, 0x7A, 0x93, 0x7E,
  // Byte Code Block
  0xFE, 0xE6, 0x1B, 0xBC, 0x60, 0x49, 0xE0, 0x0D, 0xE6, 0x92, 0x92, 0xB8, 0x92, 0x68, 0x40, 0xE1,
  0xB8, 0x49, 0x8E, 0xAD, 0x93, 0xF8, 0xE0, 0x9C, 0x9D, 0x98, 0x98, 0x93, 0xAD, 0x8E, 0x9E, 0x9F,
  0x9F, 0x94, 0x60, 0x78, 0x99, 0x40, 0x04, 0xC0, 0xE0, 0x60, 0x8E, 0xFC, 0xB4, 0xA3, 0x62, 0xB3,
  0x60, 0x89, 0xB6, 0x61, 0x9C, 0xE2, 0x6B, 0x44, 0xAC, 0x68, 0x08, 0xE1, 0x65, 0x90, 0x68, 0x28,
  0xE1, 0x65, 0xE1, 0x8E, 0x93, 0xA7, 0xA8, 0x65, 0xE2, 0x8E, 0xE1, 0x8F, 0x6C, 0xE5, 0xA5, 0x07,
  0xE1, 0x8F, 0x4C, 0xE5, 0x35, 0xA1, 0x68, 0x04, 0x90, 0xD2, 0x80, 0xE2, 0x65, 0x99, 0xB5, 0x8D,
  0xB4, 0x99, 0xE6, 0xD2, 0xC0, 0x02, 0x03, 0xB8, 0xBF, 0x97, 0x02, 0x82, 0x97, 0x96, 0xC0, 0x83,
  0x82, 0x8E, 0x68, 0x00, 0xAC, 0xA6, 0x91, 0xE1, 0xB8, 0xA1, 0xE1, 0xBF, 0x85, 0x68, 0x00, 0xB1,
  0x95, 0x96, 0x96, 0xC0, 0x83, 0x82, 0x8E, 0x68, 0x00, 0xAC, 0xAD, 0x83, 0xC0, 0x62, 0x82, 0xB8,
  0xC0, 0x81, 0x97, 0x97, 0x68, 0x48, 0xE1, 0xD2, 0x80, 0x61, 0x52, 0x53, 0xD2, 0xC0, 0x62, 0xB0,
  0xA1, 0x68, 0x00, 0x99, 0x35, 0x45, 0xA5, 0xA5, 0x4C, 0x07, 0xE1, 0xF8, 0x06, 0x65, 0x8F, 0x9A,
  0x65, 0xE1, 0xFE, 0x26, 0x65, 0xD2, 0xC0, 0x02, 0x99, 0x9A, 0x62, 0xA4, 0xD4, 0x94, 0x93, 0xCA,
  0xBE, 0x94, 0x85, 0xF5, 0x60, 0x1F, 0xE0, 0x5A, 0xE3, 0x03, 0xA9, 0xA9, 0x98, 0xE1, 0x60, 0x21,
  0xE0, 0x85, 0x60, 0x7F, 0x85, 0x68, 0x0A, 0x7A, 0x68, 0x60, 0x85, 0xA2, 0xA3, 0x81, 0x61, 0xA0,
  0x81, 0xC0, 0x6A, 0xA2, 0xB6, 0x81, 0x80, 0xE1, 0x65, 0xDF, 0xE2, 0xA0, 0x90, 0x74, 0xDF, 0xE2,
  0xA0, 0x90, 0xE4, 0xA4, 0xD4, 0x90, 0x90, 0x60, 0x8F, 0x90, 0xE1, 0x8C, 0x8B, 0x9D, 0xE2, 0x68,
  0x72, 0x80, 0xE3, 0xB8, 0x80, 0xE4, 0x96, 0xE6, 0xC0, 0x83, 0x82, 0xD0, 0xA3, 0xFA, 0xFB, 0xBA,
  0x65, 0x90, 0xE9, 0x8F, 0x68, 0x38, 0xE0, 0xCA, 0x93, 0x93, 0x94, 0x94, 0x90, 0x90, 0x91, 0x1E,
  0x50, 0xE6, 0x9B, 0x9B, 0xCA, 0xFC, 0xE0, 0xFB, 0xE0, 0x40, 0x08, 0xC0, 0x9D, 0xDB, 0x90, 0xE1,
  0x65, 0x65, 0x65, 0xA0, 0x81, 0xC0, 0x6A, 0x90, 0xE3, 0xA4, 0xD4, 0x90, 0xE1, 0xF3, 0xA3, 0x81,
  0x8C, 0x84, 0xA4, 0xA4, 0x53, 0x68, 0xF0, 0x61, 0xA0, 0x81, 0xC0, 0x6A, 0xA3, 0x81, 0x7A, 0xD2,
  0x80, 0x68, 0x20, 0x60, 0x30, 0xA9, 0x97, 0x40, 0x08, 0x40, 0xB8, 0x99, 0xE4, 0x6E, 0xE9, 0x80,
  0xE8, 0x83, 0x82, 0x80, 0xE1, 0x83, 0xE1, 0xA6, 0xE1, 0xB5, 0xE1, 0x90, 0xE2, 0x94, 0x94, 0xAE,
  0xAE, 0xC4, 0xC5, 0x66, 0xE4, 0x80, 0xC3, 0xA6, 0xA6, 0xB5, 0x65, 0x90, 0xCC, 0x92, 0x92, 0xAF,
  0xAF, 0x99, 0xE3, 0x0D, 0xE9, 0xB8, 0x97, 0x68, 0x00, 0x68, 0x09, 0xC5, 0xB8, 0x90, 0x68, 0x24,
  0xA1, 0x3C, 0xA4, 0xE3, 0x65, 0x8E, 0x8D, 0x91, 0x81, 0x9A, 0xE6, 0xE6, 0xA0, 0xBB, 0x19, 0x21,
  0xE6, 0xAD, 0x60, 0x83, 0xF7, 0x18, 0xB2, 0x58, 0xF2, 0xBD, 0x90, 0xE2, 0xD6, 0xC1, 0x63, 0xD2,
  0x90, 0x90, 0x63, 0xF8, 0xE2, 0xD8, 0xC1, 0x63, 0xA8, 0x91, 0xC1, 0xDF, 0x85, 0xA8, 0xB5, 0xAC,
  0xC5, 0xA0, 0x85, 0xE5, 0xD8, 0xC1, 0x63, 0x2C, 0x91, 0xA8, 0x90, 0xE2, 0xD6, 0x81, 0xE4, 0xB3,
  0x17, 0x58, 0xE5, 0xB5, 0x62, 0xFC, 0xB5, 0xE6, 0x8D, 0x34, 0x90, 0xE2, 0xB6, 0x9F, 0x93, 0xBA,
  0x63, 0xFE, 0x85, 0xE9, 0xB9, 0x04, 0x60, 0x88, 0xE4, 0x4F, 0xD6, 0x81, 0xE4, 0xD2, 0xC0, 0x63,
  0xD6, 0xC1, 0x63, 0x90, 0xE1, 0xD8, 0xC1, 0x63, 0x2C, 0xE1, 0xB7, 0x0C, 0xFD, 0x90, 0xE3, 0xAD,
  0x81, 0x80, 0x9C, 0xA9, 0x24, 0xF7, 0xAD, 0xE1, 0xC5, 0xA0, 0x85, 0x68, 0xE0, 0xB5, 0x81, 0xE4,
  0x89, 0x88, 0x90, 0xF3, 0xE0, 0xAA, 0xAB, 0xCB, 0x8C, 0x47, 0x81, 0x91, 0xDD, 0x63, 0xC1, 0x91,
  0x91, 0xCD, 0xCE, 0x68, 0x08, 0xA0, 0xA1, 0x99, 0x03, 0xA0, 0xFC, 0x85, 0x68, 0x80, 0x65, 0xFE,
  0xAC, 0x68, 0xA0, 0x65, 0x9A, 0xB2, 0x93, 0x94, 0x5B, 0xFF, 0xFF, 0xFF
};

#ifdef MAMEFONT_PROGMEM_SELF_DEFINED
#undef MAMEFONT_PROGMEM
#endif
