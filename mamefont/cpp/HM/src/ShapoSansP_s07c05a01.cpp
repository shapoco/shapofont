// Generated by MameFont
//   Format Version: 1
//   First Code      : 32
//   Glyph Count     : 95
//   Font Height     : 7 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 2520 px
//   Fragment Shape  : Horizontal
//   Bit Order       : MSB First
//   Shrinked Format : Yes
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (2 Bytes/glyph)
//     Lookup Table  :   24 Bytes (37.50% used)
//     Bytecodes     :  497 Bytes (5.23 Bytes/glyph)
//     Total         :  719 Bytes (7.57 Bytes/glyph)
//   Compression Performance:
//     CPY         :  160 -->   60 ( -15.04%)
//     LUD (step=0):   28 -->   14 (  -2.11%)
//     LUD (step=1):   56 -->   28 (  -4.21%)
//     LUP         :  232 -->  232 (  +0.00%)
//     RPT         :  129 -->   58 ( -10.68%)
//     SFT         :   34 -->   29 (  -0.75%)
//     XOR         :   26 -->   26 (  +0.00%)
//     Total       :  665 -->  447 ( -32.78%)
//   Memory Efficiency:  3.505 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t ShapoSansP_s07c05a01_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x60, 0x20, 0x5E, 0x17, 0x06, 0x01, 0x04,
  // Glyph Table
  0x00, 0x12, 0x01, 0x10, 0x04, 0x12, 0x05, 0x14, 0x08, 0x14, 0x0B, 0x14, 0x0E, 0x14, 0x12, 0x10,
  0x13, 0x11, 0x15, 0x11, 0x17, 0x14, 0x1A, 0x14, 0x1C, 0x10, 0x1E, 0x12, 0x20, 0x10, 0x22, 0x12,
  0x25, 0x13, 0x27, 0x13, 0x2A, 0x13, 0x2D, 0x13, 0x30, 0x13, 0x33, 0x13, 0x37, 0x13, 0x3A, 0x13,
  0x3D, 0x13, 0x3F, 0x13, 0x41, 0x10, 0x43, 0x10, 0x45, 0x12, 0x47, 0x12, 0x49, 0x12, 0x4B, 0x13,
  0x4D, 0x14, 0x50, 0x14, 0x53, 0x14, 0x56, 0x14, 0x59, 0x14, 0x5B, 0x13, 0x5E, 0x13, 0x61, 0x14,
  0x65, 0x14, 0x67, 0x10, 0x69, 0x14, 0x6C, 0x14, 0x6E, 0x13, 0x71, 0x14, 0x74, 0x14, 0x77, 0x14,
  0x79, 0x14, 0x7C, 0x14, 0x7F, 0x14, 0x82, 0x14, 0x85, 0x14, 0x88, 0x14, 0x8A, 0x14, 0x8C, 0x14,
  0x8F, 0x14, 0x91, 0x14, 0x93, 0x14, 0x96, 0x12, 0x98, 0x12, 0x9B, 0x12, 0x9D, 0x14, 0x9F, 0x12,
  0xA0, 0x11, 0xA2, 0x13, 0xA5, 0x13, 0xA8, 0x12, 0xAA, 0x13, 0xAD, 0x13, 0xB0, 0x12, 0xB4, 0x13,
  0xB7, 0x13, 0xBA, 0x10, 0xBD, 0x11, 0xC0, 0x13, 0xC3, 0x11, 0xC6, 0x14, 0xC9, 0x13, 0xCC, 0x13,
  0xCE, 0x13, 0xD1, 0x13, 0xD4, 0x12, 0xD7, 0x13, 0xDA, 0x12, 0xDE, 0x13, 0xE1, 0x14, 0xE3, 0x14,
  0xE6, 0x13, 0xE8, 0x13, 0xEA, 0x13, 0xED, 0x12, 0xF0, 0x10, 0xF1, 0x12, 0xF4, 0x14,
  // Lookup Table
  0x60, 0x90, 0x70, 0x10, 0x20, 0x00, 0x88, 0x50, 0xA8, 0xF8, 0x68, 0xF0, 0xA0, 0xE0, 0x98, 0x78,
  0xE8, 0xB0, 0xB8, 0x08, 0x28, 0xD8, 0xD0, 0xC0,
  // Bytecodes
  0xE6, 0xFF, 0x85, 0xF7, 0xE1, 0x85, 0x41, 0xFF, 0x8C, 0x65, 0x85, 0x87, 0x89, 0x87, 0x6A, 0xFF,
  0x84, 0x82, 0x8C, 0x82, 0x94, 0x79, 0x85, 0x90, 0x91, 0xD9, 0x92, 0x85, 0x85, 0xF6, 0x8C, 0x8A,
  0x81, 0x8A, 0x85, 0xFF, 0xF7, 0x65, 0xF6, 0x00, 0xE1, 0x6A, 0xF7, 0x20, 0xE1, 0x6A, 0x85, 0x84,
  0x88, 0x82, 0x6A, 0xFF, 0x85, 0xC4, 0x89, 0x6A, 0xE4, 0xF7, 0xE0, 0xFF, 0xE2, 0x8D, 0x4A, 0xFF,
  0xE4, 0xF7, 0x85, 0xFF, 0xC4, 0x00, 0xE1, 0x00, 0xE0, 0xFF, 0x85, 0xD0, 0x81, 0x6A, 0x85, 0x80,
  0x84, 0xE2, 0x85, 0xFF, 0x85, 0xD0, 0x01, 0x8B, 0x85, 0xFF, 0x85, 0x8D, 0x83, 0x80, 0x6A, 0xFF,
  0x85, 0xC1, 0x8B, 0xC3, 0x85, 0xFF, 0x85, 0x8B, 0x08, 0x8D, 0x83, 0x8D, 0x85, 0xFF, 0x85, 0x80,
  0x04, 0x8D, 0x81, 0x79, 0x85, 0x8B, 0x81, 0xD3, 0xD4, 0xFF, 0x85, 0xD0, 0x80, 0x6A, 0x85, 0xD0,
  0xD2, 0x79, 0xE1, 0xF7, 0x85, 0x42, 0xE1, 0xF7, 0x42, 0xE0, 0x85, 0x84, 0x01, 0x6A, 0xE1, 0x8D,
  0x41, 0x59, 0x85, 0xF7, 0x21, 0x6A, 0x85, 0xD0, 0xD4, 0x41, 0x85, 0x82, 0x92, 0x92, 0x0C, 0x79,
  0x85, 0x82, 0xC6, 0x89, 0x86, 0x85, 0x85, 0x8B, 0x86, 0x8B, 0x6A, 0xFF, 0x85, 0x8F, 0x0C, 0xE0,
  0x6A, 0xFF, 0x85, 0x8B, 0xC6, 0x6A, 0x85, 0x8B, 0x08, 0x8B, 0x6A, 0xFF, 0x85, 0x8B, 0x08, 0x41,
  0xE0, 0x85, 0x85, 0x82, 0x08, 0x8E, 0x86, 0x8F, 0x85, 0xFF, 0xD5, 0x86, 0x89, 0x6A, 0x85, 0xF7,
  0xE1, 0x6A, 0x85, 0x93, 0x93, 0xC6, 0x82, 0x85, 0xD5, 0x81, 0x8D, 0x6A, 0x85, 0xF7, 0xE2, 0x8B,
  0x85, 0xFF, 0xD5, 0x95, 0x88, 0x86, 0x79, 0xFF, 0xD5, 0xF6, 0x88, 0x8E, 0x79, 0xFF, 0x85, 0x82,
  0xC6, 0x6A, 0x85, 0x8B, 0x86, 0x61, 0x09, 0xFF, 0x85, 0x82, 0x86, 0x88, 0xDE, 0x85, 0x85, 0x8B,
  0x86, 0x41, 0x86, 0x85, 0x85, 0x82, 0x08, 0x82, 0x93, 0x79, 0x85, 0x89, 0x84, 0xE2, 0x85, 0xFF,
  0xD5, 0xE2, 0x82, 0x85, 0xD5, 0xE1, 0x87, 0xD4, 0xD5, 0xC8, 0x89, 0x87, 0x85, 0xFF, 0xD5, 0x87,
  0x84, 0x6A, 0xD5, 0xD6, 0xC4, 0x85, 0x85, 0x89, 0x83, 0x01, 0x79, 0xFF, 0x8D, 0x04, 0xE1, 0x6A,
  0xF7, 0xE0, 0x20, 0xE1, 0xC4, 0xFF, 0x8D, 0x84, 0xE1, 0x6A, 0x84, 0x87, 0x86, 0x5B, 0xE5, 0x8D,
  0xF7, 0x20, 0x54, 0xFF, 0xE1, 0x80, 0x83, 0xCB, 0x85, 0xFF, 0x85, 0xF7, 0x8D, 0x81, 0x61, 0x85,
  0xE1, 0x80, 0x04, 0x62, 0x85, 0x83, 0x82, 0x81, 0x61, 0x85, 0xE1, 0x80, 0x8B, 0x08, 0x71, 0xFF,
  0x85, 0x80, 0x04, 0x8D, 0x48, 0xE0, 0x85, 0xFF, 0xE1, 0x82, 0xD1, 0x83, 0x80, 0xFF, 0x85, 0xF7,
  0x8D, 0x81, 0xE1, 0x85, 0x85, 0xF7, 0x41, 0xE0, 0x51, 0xFF, 0x85, 0xF6, 0x41, 0xE1, 0x00, 0xFF,
  0x85, 0xF7, 0x81, 0xDC, 0x81, 0x85, 0x85, 0x97, 0xF7, 0xE2, 0x85, 0xFF, 0xE1, 0x96, 0x88, 0xE1,
  0x85, 0xFF, 0xE1, 0x8D, 0x81, 0xE1, 0x85, 0xFF, 0xE1, 0xD0, 0x62, 0xFF, 0xE1, 0x8D, 0x81, 0x61,
  0x04, 0xFF, 0xE1, 0x82, 0x81, 0x61, 0x83, 0xFF, 0xE1, 0x8C, 0x97, 0xF6, 0xE0, 0x85, 0xE1, 0x82,
  0x97, 0x24, 0x8D, 0x85, 0x85, 0xF7, 0x8D, 0x48, 0xE0, 0x80, 0x85, 0xFF, 0xE1, 0x81, 0xE1, 0x82,
  0x85, 0xFF, 0xE1, 0xC6, 0x87, 0xD4, 0xE1, 0x86, 0xD8, 0x87, 0x85, 0xFF, 0xE1, 0x81, 0x80, 0x62,
  0xE1, 0xC1, 0xD2, 0x80, 0xE1, 0x8B, 0x84, 0x00, 0x71, 0xFF, 0x84, 0x00, 0xE0, 0x97, 0x6A, 0xFF,
  0xF7, 0xE5, 0xF7, 0x20, 0xE0, 0x80, 0x6A, 0xFF, 0xE1, 0xF6, 0x88, 0x83, 0x59, 0xFF, 0xFF, 0xFF,
  0xFF,
};

extern const mamefont::Font ShapoSansP_s07c05a01(ShapoSansP_s07c05a01_blob);

#undef MAMEFONT_PROGMEM
