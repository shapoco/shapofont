// Generated by MameFont
//   Format Version: 1
//   First Code      : 32
//   Glyph Count     : 95
//   Font Height     : 8 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 3800 px
//   Fragment Shape  : Horizontal
//   Bit Order       : MSB First
//   Shrinked Format : Yes
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (2 Bytes/glyph)
//     Lookup Table  :   30 Bytes (46.88% used)
//     Bytecodes     :  507 Bytes (5.34 Bytes/glyph)
//     Total         :  735 Bytes (7.74 Bytes/glyph)
//   Compression Performance:
//     CPY         :  177 -->   56 ( -15.92%)
//     LUD (step=0):   56 -->   28 (  -3.68%)
//     LUD (step=1):   74 -->   37 (  -4.87%)
//     LUP         :  233 -->  233 (  +0.00%)
//     RPT         :  143 -->   56 ( -11.45%)
//     SFI         :   33 -->   20 (  -1.71%)
//     SFT         :   35 -->   23 (  -1.58%)
//     XOR         :    9 -->    9 (  +0.00%)
//     Total       :  760 -->  462 ( -39.21%)
//   Memory Efficiency:  5.170 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t ShapoSansMono_s08c07_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x60, 0x20, 0x5E, 0x1D, 0x07, 0x02, 0x04,
  // Glyph Table
  0x00, 0x14, 0x01, 0x14, 0x03, 0x14, 0x04, 0x14, 0x06, 0x14, 0x09, 0x14, 0x0D, 0x14, 0x10, 0x14,
  0x12, 0x14, 0x14, 0x14, 0x16, 0x14, 0x19, 0x14, 0x1B, 0x14, 0x1D, 0x14, 0x1F, 0x14, 0x21, 0x14,
  0x23, 0x14, 0x26, 0x14, 0x28, 0x14, 0x2B, 0x14, 0x2F, 0x14, 0x32, 0x14, 0x36, 0x14, 0x39, 0x14,
  0x3C, 0x14, 0x3E, 0x14, 0x41, 0x14, 0x43, 0x14, 0x46, 0x14, 0x48, 0x14, 0x4A, 0x14, 0x4C, 0x14,
  0x4F, 0x14, 0x52, 0x14, 0x55, 0x14, 0x58, 0x14, 0x5A, 0x14, 0x5C, 0x14, 0x5F, 0x14, 0x63, 0x14,
  0x66, 0x14, 0x68, 0x14, 0x6A, 0x14, 0x6D, 0x14, 0x6F, 0x14, 0x71, 0x14, 0x74, 0x14, 0x77, 0x14,
  0x79, 0x14, 0x7C, 0x14, 0x7F, 0x14, 0x83, 0x14, 0x85, 0x14, 0x87, 0x14, 0x89, 0x14, 0x8C, 0x14,
  0x8F, 0x14, 0x91, 0x14, 0x94, 0x14, 0x97, 0x14, 0x99, 0x14, 0x9B, 0x14, 0x9D, 0x14, 0x9F, 0x14,
  0xA1, 0x14, 0xA3, 0x14, 0xA7, 0x14, 0xAB, 0x14, 0xAE, 0x14, 0xB1, 0x14, 0xB4, 0x14, 0xB8, 0x14,
  0xBB, 0x14, 0xBE, 0x14, 0xC1, 0x14, 0xC4, 0x14, 0xC8, 0x14, 0xCA, 0x14, 0xCD, 0x14, 0xD0, 0x14,
  0xD2, 0x14, 0xD5, 0x14, 0xD8, 0x14, 0xDB, 0x14, 0xDE, 0x14, 0xE2, 0x14, 0xE5, 0x14, 0xE7, 0x14,
  0xEB, 0x14, 0xED, 0x14, 0xF0, 0x14, 0xF2, 0x14, 0xF5, 0x14, 0xF6, 0x14, 0xF9, 0x14,
  // Lookup Table
  0x70, 0x88, 0x50, 0x60, 0x20, 0x00, 0x30, 0xB0, 0xC8, 0x98, 0x68, 0x08, 0xF8, 0x10, 0xA8, 0x90,
  0xA0, 0xC0, 0xF0, 0x48, 0xD8, 0x18, 0x78, 0xD0, 0x28, 0x58, 0xB8, 0xE0, 0x38, 0x00,
  // Bytecodes
  0xE7, 0xFF, 0x83, 0xE1, 0x6A, 0x41, 0x82, 0x66, 0x82, 0x8C, 0xC2, 0x6B, 0x84, 0x80, 0x90, 0x80,
  0x98, 0x7A, 0x88, 0x97, 0x8D, 0x01, 0x99, 0x89, 0x85, 0xFF, 0x83, 0x8F, 0x61, 0xDE, 0x8A, 0x85,
  0xD3, 0x00, 0x5C, 0xFF, 0x86, 0x83, 0xE1, 0x6B, 0x83, 0x86, 0xE1, 0x6B, 0x85, 0x84, 0x8E, 0x80,
  0x6B, 0xFF, 0x85, 0xC4, 0x8C, 0x6B, 0xE4, 0xD3, 0x00, 0xFF, 0xE2, 0x80, 0x4B, 0xFF, 0xE4, 0x83,
  0x61, 0xFF, 0x95, 0x68, 0x02, 0x91, 0xD0, 0x89, 0x8E, 0x88, 0x7A, 0xFF, 0x84, 0xD3, 0xE3, 0x85,
  0xD0, 0x8B, 0x02, 0x8C, 0x85, 0xFF, 0xDC, 0x84, 0x80, 0x8B, 0x81, 0x80, 0x85, 0xFF, 0x86, 0xC2,
  0x8F, 0xDC, 0x8D, 0x85, 0x8C, 0x0C, 0x92, 0xCB, 0x81, 0x80, 0x85, 0xFF, 0x8D, 0x01, 0x92, 0xC1,
  0x80, 0x85, 0x8C, 0x81, 0x8B, 0x68, 0x08, 0xD4, 0xD0, 0x61, 0x6B, 0xFF, 0xD0, 0x81, 0x96, 0x8D,
  0x01, 0x85, 0x85, 0x83, 0x61, 0x43, 0x85, 0xC3, 0x4A, 0x84, 0x00, 0xFF, 0xD5, 0x01, 0x6B, 0xFF,
  0xE1, 0x80, 0x41, 0x5A, 0x85, 0x83, 0x21, 0x6B, 0x80, 0x94, 0x95, 0xC6, 0x85, 0x41, 0xD0, 0xCE,
  0x9A, 0x0C, 0x80, 0x85, 0x84, 0xC2, 0x81, 0x8C, 0xC1, 0x85, 0x9B, 0xCF, 0x92, 0x81, 0x61, 0x85,
  0xD0, 0xF3, 0xE0, 0x6B, 0x9B, 0x8F, 0xC1, 0x6B, 0x8C, 0x0C, 0xE0, 0x92, 0x6B, 0xFF, 0x8C, 0x0C,
  0xE0, 0x92, 0x48, 0x68, 0x40, 0xFF, 0xD0, 0xF3, 0x9A, 0x81, 0xD9, 0x85, 0x81, 0xE1, 0x8C, 0x6B,
  0x80, 0x84, 0xE1, 0x6B, 0x8B, 0xE2, 0xC1, 0x80, 0x85, 0xFF, 0x81, 0xDF, 0x91, 0x6B, 0xF7, 0xE4,
  0x8C, 0x85, 0x81, 0x94, 0x94, 0xCE, 0xC1, 0x85, 0x81, 0xC8, 0x8E, 0xC9, 0x81, 0x85, 0xD0, 0xE1,
  0x6B, 0xFF, 0x92, 0x81, 0x61, 0x08, 0x68, 0x40, 0xD0, 0x81, 0xCE, 0x8F, 0x8A, 0x85, 0x92, 0x81,
  0x61, 0x90, 0x8F, 0x81, 0x85, 0xFF, 0xD0, 0x08, 0x21, 0x7A, 0x8C, 0x84, 0xE4, 0x85, 0x81, 0xE4,
  0x80, 0x85, 0x81, 0xE1, 0xC2, 0xC4, 0x85, 0xFF, 0xC1, 0x8E, 0x68, 0x40, 0x82, 0x85, 0xD1, 0x82,
  0x84, 0x6B, 0xC1, 0x82, 0x84, 0xE2, 0x85, 0xFF, 0x8C, 0x8B, 0x03, 0x8C, 0x85, 0xFF, 0x96, 0x83,
  0xE1, 0x6B, 0x91, 0x68, 0x22, 0x95, 0x92, 0x86, 0xE1, 0x6B, 0x84, 0x82, 0x81, 0x5C, 0xE5, 0x8C,
  0x85, 0xFF, 0x86, 0x95, 0x8B, 0x5C, 0xE1, 0x80, 0x8B, 0x96, 0x81, 0x96, 0x85, 0xFF, 0xF7, 0xE0,
  0x92, 0xC1, 0x88, 0x87, 0x85, 0xFF, 0xE1, 0x80, 0x08, 0xE0, 0x6A, 0xFF, 0xCB, 0x96, 0xC1, 0xD9,
  0x85, 0xFF, 0xE1, 0xD0, 0x8C, 0x0C, 0x79, 0xFF, 0x86, 0x93, 0xF3, 0x8C, 0x48, 0xE1, 0x85, 0xFF,
  0xE1, 0x96, 0x81, 0x61, 0x8B, 0x86, 0xF7, 0xE0, 0xD7, 0x81, 0xE1, 0x85, 0xD4, 0xD3, 0xE1, 0x80,
  0x85, 0xFF, 0x8D, 0xD5, 0x8D, 0xE1, 0x8F, 0x83, 0xF7, 0xE0, 0x81, 0x8F, 0x9B, 0x69, 0x85, 0xFF,
  0xD3, 0xE4, 0x85, 0xFF, 0xE1, 0x97, 0x8E, 0xE2, 0x85, 0xFF, 0xE1, 0xD7, 0x81, 0xE1, 0x85, 0xFF,
  0xE1, 0xD0, 0x81, 0x6A, 0xE1, 0xD7, 0x81, 0x69, 0x08, 0xFF, 0xE1, 0x8A, 0x89, 0x81, 0x69, 0x8B,
  0xE1, 0xD7, 0x0C, 0x68, 0x40, 0xFF, 0xE1, 0x80, 0x08, 0x80, 0x8B, 0x79, 0x85, 0xF6, 0x92, 0x48,
  0xE0, 0x93, 0x86, 0x85, 0xE1, 0x81, 0xE1, 0xD9, 0x85, 0xFF, 0xE1, 0xC1, 0xC2, 0xD4, 0xE1, 0x81,
  0x8E, 0x68, 0x00, 0x82, 0x85, 0xFF, 0xE1, 0xD1, 0x84, 0x6A, 0xE1, 0xC1, 0xD9, 0x8B, 0x86, 0xFF,
  0xE1, 0xDC, 0x01, 0x79, 0x9C, 0x83, 0x68, 0x00, 0x6B, 0xFF, 0x84, 0xE6, 0x9B, 0x86, 0x68, 0x20,
  0x6B, 0xFF, 0xE1, 0xF6, 0x8E, 0x8D, 0x5A, 0xFF, 0xFF, 0xFF, 0xFF,
};

extern const mamefont::Font ShapoSansMono_s08c07(ShapoSansMono_s08c07_blob);

#undef MAMEFONT_PROGMEM
