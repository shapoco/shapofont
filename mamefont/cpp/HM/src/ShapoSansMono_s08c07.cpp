// Generated by MameFont
//   Format Version: 1
//   First Code      : 32
//   Glyph Count     : 95
//   Font Height     : 8 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 3800 px
//   Fragment Shape  : Horizontal
//   Bit Order       : MSB First
//   Shrinked Format : Yes
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (2 Bytes/glyph)
//     Lookup Table  :   30 Bytes (46.88% used)
//     Bytecodes     :  515 Bytes (5.42 Bytes/glyph)
//     Total         :  743 Bytes (7.82 Bytes/glyph)
//   Compression Performance:
//     CPY         :  177 -->   56 ( -15.92%)
//     LUD (step=0):   78 -->   39 (  -5.13%)
//     LUD (step=1):   72 -->   36 (  -4.74%)
//     LUP         :  238 -->  238 (  +0.00%)
//     RPT         :  151 -->   60 ( -11.97%)
//     SFT         :   35 -->   23 (  -1.58%)
//     XOR         :    9 -->    9 (  +0.00%)
//     Total       :  760 -->  461 ( -39.34%)
//   Memory Efficiency:  5.114 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t ShapoSansMono_s08c07_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x60, 0x20, 0x5E, 0x1D, 0x07, 0x09, 0x04,
  // Glyph Table
  0x00, 0x54, 0x01, 0x54, 0x03, 0x54, 0x04, 0x54, 0x06, 0x54, 0x09, 0x54, 0x0D, 0x54, 0x11, 0x54,
  0x13, 0x54, 0x15, 0x54, 0x17, 0x54, 0x1A, 0x54, 0x1C, 0x54, 0x1E, 0x54, 0x20, 0x54, 0x22, 0x54,
  0x25, 0x54, 0x28, 0x54, 0x2A, 0x54, 0x2D, 0x54, 0x31, 0x54, 0x34, 0x54, 0x38, 0x54, 0x3B, 0x54,
  0x3E, 0x54, 0x40, 0x54, 0x43, 0x54, 0x45, 0x54, 0x48, 0x54, 0x4A, 0x54, 0x4C, 0x54, 0x4E, 0x54,
  0x51, 0x54, 0x54, 0x54, 0x57, 0x54, 0x5B, 0x54, 0x5D, 0x54, 0x5F, 0x54, 0x62, 0x54, 0x66, 0x54,
  0x69, 0x54, 0x6B, 0x54, 0x6D, 0x54, 0x70, 0x54, 0x73, 0x54, 0x75, 0x54, 0x78, 0x54, 0x7B, 0x54,
  0x7D, 0x54, 0x80, 0x54, 0x83, 0x54, 0x86, 0x54, 0x88, 0x54, 0x8A, 0x54, 0x8C, 0x54, 0x8F, 0x54,
  0x92, 0x54, 0x94, 0x54, 0x97, 0x54, 0x9A, 0x54, 0x9C, 0x54, 0x9F, 0x54, 0xA1, 0x54, 0xA3, 0x54,
  0xA5, 0x54, 0xA7, 0x54, 0xAB, 0x54, 0xAF, 0x54, 0xB2, 0x54, 0xB5, 0x54, 0xB8, 0x54, 0xBC, 0x54,
  0xBF, 0x54, 0xC2, 0x54, 0xC5, 0x54, 0xC9, 0x54, 0xCD, 0x54, 0xCF, 0x54, 0xD2, 0x54, 0xD5, 0x54,
  0xD7, 0x54, 0xDA, 0x54, 0xDD, 0x54, 0xE0, 0x54, 0xE3, 0x54, 0xE7, 0x54, 0xEA, 0x54, 0xED, 0x54,
  0xF0, 0x54, 0xF3, 0x54, 0xF6, 0x54, 0xF8, 0x54, 0xFA, 0x54, 0xFB, 0x54, 0xFD, 0x54,
  // Lookup Table
  0x70, 0x88, 0x00, 0x60, 0x20, 0x50, 0x30, 0x18, 0xA8, 0xB0, 0xC8, 0x98, 0x68, 0x08, 0xF8, 0x10,
  0xE0, 0x90, 0xA0, 0xC0, 0xF0, 0x48, 0xD8, 0x78, 0xD0, 0x28, 0x58, 0xB8, 0x38, 0x00,
  // Bytecodes
  0x67, 0xF0, 0x03, 0x61, 0xEA, 0xC1, 0x05, 0xE6, 0x05, 0x0E, 0x45, 0xEB, 0x04, 0x00, 0x12, 0x00,
  0x19, 0xFA, 0x0A, 0x18, 0x0F, 0x81, 0x1A, 0x0B, 0x02, 0xF0, 0x03, 0x11, 0xE1, 0x08, 0x11, 0x0C,
  0x02, 0xF0, 0x53, 0x80, 0xDC, 0xF0, 0x06, 0x03, 0x61, 0xEB, 0x03, 0x06, 0x61, 0xEB, 0x02, 0x04,
  0x08, 0x00, 0xEB, 0xF0, 0x02, 0x44, 0x0E, 0xEB, 0x64, 0x53, 0x80, 0xF0, 0x62, 0x00, 0xCB, 0xF0,
  0x64, 0x03, 0xE1, 0xF0, 0x47, 0x46, 0x43, 0x13, 0x13, 0xF0, 0x50, 0x0B, 0x08, 0x0A, 0xFA, 0xF0,
  0x04, 0x53, 0x63, 0x02, 0x50, 0x0D, 0x82, 0x0E, 0x02, 0xF0, 0x5E, 0x04, 0x00, 0x0D, 0x01, 0x00,
  0x02, 0xF0, 0x06, 0x45, 0x11, 0x5E, 0x0F, 0x02, 0x0E, 0x8C, 0x14, 0x4D, 0x01, 0x00, 0x02, 0xF0,
  0x0F, 0x81, 0x14, 0x41, 0x00, 0x02, 0x0E, 0x01, 0x0D, 0x4F, 0x44, 0x02, 0x50, 0xE1, 0xEB, 0xF0,
  0x50, 0x01, 0x17, 0x0F, 0x81, 0x02, 0x52, 0xE1, 0xC3, 0xF0, 0x52, 0x03, 0xCA, 0x04, 0x80, 0xF0,
  0x02, 0x06, 0x81, 0xEB, 0x61, 0x00, 0xC1, 0xDA, 0x52, 0xA1, 0xEB, 0xF0, 0x00, 0x16, 0x07, 0x46,
  0x02, 0xC1, 0x50, 0x48, 0x1B, 0x8C, 0x00, 0x02, 0x54, 0x05, 0x01, 0x0E, 0x41, 0x02, 0x10, 0x11,
  0x11, 0x14, 0x01, 0xE1, 0x02, 0xF0, 0x50, 0x73, 0x60, 0xEB, 0x10, 0x11, 0x41, 0xEB, 0x0E, 0x8C,
  0x60, 0x14, 0xEB, 0xF0, 0x0E, 0x8C, 0x60, 0x14, 0xC8, 0x61, 0x02, 0xF0, 0x50, 0x73, 0x1B, 0x01,
  0x5B, 0x02, 0x01, 0x61, 0x0E, 0xEB, 0x00, 0x04, 0x61, 0xEB, 0x0D, 0x62, 0x41, 0x00, 0x02, 0xF0,
  0x01, 0x11, 0x12, 0x13, 0xEB, 0xF0, 0x77, 0x64, 0x0E, 0x02, 0x01, 0x16, 0x16, 0x48, 0x41, 0x02,
  0x01, 0x4A, 0x08, 0x4B, 0x51, 0xF0, 0x50, 0x61, 0xEB, 0xF0, 0x14, 0x01, 0xE1, 0x88, 0x61, 0x02,
  0x50, 0x01, 0x48, 0x11, 0x0C, 0x02, 0x14, 0x01, 0xE1, 0x12, 0x11, 0x51, 0x50, 0x88, 0xA1, 0xFA,
  0x0E, 0x04, 0x64, 0x02, 0x01, 0x64, 0x00, 0x02, 0x01, 0x61, 0x45, 0x44, 0x02, 0xF0, 0x41, 0x08,
  0x61, 0x45, 0x02, 0xF0, 0x01, 0x45, 0x04, 0xEB, 0x41, 0x05, 0x04, 0x62, 0x02, 0xF0, 0x0E, 0x0D,
  0x83, 0x0E, 0x02, 0xF0, 0x17, 0x03, 0x61, 0xEB, 0x13, 0x13, 0x43, 0x46, 0x47, 0xF0, 0x14, 0x06,
  0x61, 0xEB, 0x54, 0x01, 0xDC, 0xF0, 0x65, 0x0E, 0x02, 0xF0, 0x56, 0x0D, 0xDC, 0xF0, 0x61, 0x00,
  0x0D, 0x17, 0x01, 0x17, 0x02, 0xF0, 0x77, 0x60, 0x14, 0x41, 0x0A, 0x09, 0x02, 0xF0, 0x61, 0x00,
  0x88, 0x60, 0xEA, 0xF0, 0x4D, 0x17, 0x41, 0x5B, 0x02, 0xF0, 0x61, 0x50, 0x0E, 0x8C, 0xF9, 0xF0,
  0x06, 0x15, 0x73, 0x0E, 0xC8, 0x61, 0x02, 0xF0, 0x61, 0x17, 0x01, 0xE1, 0x0D, 0x06, 0x77, 0x60,
  0x59, 0x01, 0x61, 0x02, 0x04, 0x52, 0x04, 0x61, 0x00, 0x02, 0x0F, 0x02, 0x06, 0x0F, 0x61, 0x11,
  0x03, 0xF0, 0x77, 0x60, 0x01, 0x11, 0x10, 0xE9, 0x02, 0xF0, 0x53, 0x64, 0x02, 0xF0, 0x61, 0x18,
  0x08, 0x62, 0x02, 0xF0, 0x61, 0x59, 0x01, 0x61, 0x02, 0xF0, 0x61, 0x50, 0x01, 0xEA, 0x61, 0x59,
  0x01, 0xE9, 0x88, 0xF0, 0x61, 0x0C, 0x0B, 0x01, 0xE9, 0x0D, 0x61, 0x59, 0x8C, 0x61, 0x02, 0xF0,
  0x61, 0x00, 0x88, 0x00, 0x0D, 0xF9, 0x02, 0x76, 0x14, 0xC8, 0x60, 0x15, 0x06, 0x02, 0x61, 0x01,
  0x61, 0x5B, 0x02, 0xF0, 0x61, 0x41, 0x45, 0x04, 0x02, 0xF0, 0x61, 0x01, 0x48, 0x45, 0x02, 0xF0,
  0x61, 0x01, 0x05, 0x04, 0xEA, 0xF0, 0x61, 0x41, 0x5B, 0x0D, 0x06, 0xF0, 0x61, 0x5E, 0x81, 0xF9,
  0x1C, 0x43, 0x13, 0xEB, 0x04, 0x66, 0x10, 0x46, 0x07, 0xEB, 0x61, 0x76, 0x08, 0x0F, 0xDA, 0xF0,
  0xF0, 0xF0, 0xF0,
};

extern const mamefont::Font ShapoSansMono_s08c07(ShapoSansMono_s08c07_blob);

#undef MAMEFONT_PROGMEM
