// Generated by MameFont
//   Format Version: 1
//   First Code      : 32
//   Glyph Count     : 95
//   Font Height     : 12 px
//   Max Glyph Width : 10 px
//   Total Pixels    : 6804 px
//   Fragment Shape  : Horizontal
//   Bit Order       : MSB First
//   Shrinked Format : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  380 Bytes (4 Bytes/glyph)
//     Lookup Table  :   54 Bytes (84.38% used)
//     Bytecodes     :  621 Bytes (6.54 Bytes/glyph)
//     Total         : 1063 Bytes (11.19 Bytes/glyph)
//   Compression Performance:
//     CPX         :    8 -->    6 (  -0.17%)
//     CPY         :  269 -->   64 ( -17.43%)
//     LUD (step=0):  130 -->   65 (  -5.53%)
//     LUD (step=1):   70 -->   35 (  -2.98%)
//     LUP         :  324 -->  324 (  +0.00%)
//     RPT         :  308 -->   86 ( -18.88%)
//     SFT         :   60 -->   31 (  -2.47%)
//     XOR         :    7 -->    7 (  +0.00%)
//     Total       : 1176 -->  618 ( -47.45%)
//   Memory Efficiency:  6.401 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t ShapoSansP_s11c09w2a1_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x40, 0x20, 0x5E, 0x35, 0x0B, 0x0D, 0x09,
  // Glyph Table
  0x00, 0x00, 0x03, 0x04, 0x01, 0x00, 0x01, 0x02, 0x06, 0x00, 0x04, 0x05, 0x0C, 0x00, 0x06, 0x07,
  0x11, 0x00, 0x07, 0x08, 0x19, 0x00, 0x09, 0x0A, 0x27, 0x00, 0x07, 0x08, 0x30, 0x00, 0x02, 0x03,
  0x36, 0x00, 0x03, 0x04, 0x3B, 0x00, 0x03, 0x04, 0x41, 0x00, 0x07, 0x08, 0x46, 0x00, 0x05, 0x06,
  0x4A, 0x00, 0x02, 0x03, 0x4F, 0x00, 0x04, 0x05, 0x52, 0x00, 0x02, 0x03, 0x55, 0x00, 0x04, 0x05,
  0x5C, 0x00, 0x05, 0x06, 0x61, 0x00, 0x05, 0x06, 0x68, 0x00, 0x05, 0x06, 0x6F, 0x00, 0x05, 0x06,
  0x78, 0x00, 0x05, 0x06, 0x7F, 0x00, 0x05, 0x06, 0x88, 0x00, 0x05, 0x06, 0x8F, 0x00, 0x05, 0x06,
  0x97, 0x00, 0x05, 0x06, 0x9D, 0x00, 0x05, 0x06, 0xA4, 0x00, 0x02, 0x03, 0xA8, 0x00, 0x02, 0x03,
  0xAE, 0x00, 0x04, 0x05, 0xB2, 0x00, 0x04, 0x05, 0xB6, 0x00, 0x04, 0x05, 0xBA, 0x00, 0x05, 0x06,
  0xC4, 0x00, 0x07, 0x08, 0xCE, 0x00, 0x06, 0x07, 0xD7, 0x00, 0x06, 0x07, 0xDD, 0x00, 0x06, 0x07,
  0xE3, 0x00, 0x06, 0x07, 0xE9, 0x00, 0x05, 0x06, 0xEE, 0x00, 0x05, 0x06, 0xF5, 0x00, 0x07, 0x08,
  0xFF, 0x00, 0x06, 0x07, 0x05, 0x01, 0x03, 0x04, 0x0B, 0x01, 0x06, 0x07, 0x12, 0x01, 0x06, 0x07,
  0x19, 0x01, 0x05, 0x06, 0x1D, 0x01, 0x09, 0x0A, 0x29, 0x01, 0x06, 0x07, 0x33, 0x01, 0x07, 0x08,
  0x39, 0x01, 0x06, 0x07, 0x40, 0x01, 0x07, 0x08, 0x4B, 0x01, 0x06, 0x07, 0x55, 0x01, 0x06, 0x07,
  0x5C, 0x01, 0x07, 0x08, 0x62, 0x01, 0x07, 0x08, 0x68, 0x01, 0x07, 0x08, 0x70, 0x01, 0x09, 0x0A,
  0x80, 0x01, 0x07, 0x08, 0x85, 0x01, 0x07, 0x08, 0x8C, 0x01, 0x06, 0x07, 0x93, 0x01, 0x03, 0x04,
  0x97, 0x01, 0x04, 0x05, 0x9E, 0x01, 0x03, 0x04, 0xA2, 0x01, 0x05, 0x06, 0xA8, 0x01, 0x05, 0x06,
  0xAB, 0x01, 0x03, 0x04, 0xB1, 0x01, 0x05, 0x06, 0xB9, 0x01, 0x05, 0x06, 0xBF, 0x01, 0x04, 0x05,
  0xC4, 0x01, 0x05, 0x06, 0xCB, 0x01, 0x05, 0x06, 0xD2, 0x01, 0x04, 0x05, 0xDA, 0x01, 0x05, 0x06,
  0xE2, 0x01, 0x05, 0x06, 0xE8, 0x01, 0x02, 0x03, 0xF0, 0x01, 0x02, 0x03, 0xF6, 0x01, 0x05, 0x06,
  0xFD, 0x01, 0x02, 0x03, 0x03, 0x02, 0x07, 0x08, 0x09, 0x02, 0x05, 0x06, 0x10, 0x02, 0x05, 0x06,
  0x14, 0x02, 0x05, 0x06, 0x19, 0x02, 0x05, 0x06, 0x1F, 0x02, 0x04, 0x05, 0x26, 0x02, 0x05, 0x06,
  0x2C, 0x02, 0x04, 0x05, 0x33, 0x02, 0x05, 0x06, 0x39, 0x02, 0x05, 0x06, 0x3E, 0x02, 0x07, 0x08,
  0x46, 0x02, 0x05, 0x06, 0x4B, 0x02, 0x06, 0x07, 0x52, 0x02, 0x05, 0x06, 0x57, 0x02, 0x04, 0x05,
  0x5C, 0x02, 0x01, 0x02, 0x5F, 0x02, 0x04, 0x05, 0x64, 0x02, 0x07, 0x08,
  // Lookup Table
  0x78, 0xFC, 0xCC, 0x00, 0xC0, 0xF8, 0x7E, 0x3C, 0x18, 0x30, 0x60, 0xFE, 0xC6, 0xC3, 0xE7, 0x6C,
  0x76, 0x0C, 0x7C, 0x38, 0x70, 0x1C, 0xEE, 0x7F, 0x3B, 0x66, 0xB6, 0xFF, 0xDB, 0xD8, 0x48, 0x3E,
  0x63, 0xCF, 0x7B, 0xDE, 0xCE, 0xDC, 0x1B, 0x1E, 0x36, 0x33, 0x0E, 0x9F, 0xE1, 0xF3, 0xF0, 0x74,
  0x73, 0xE6, 0x06, 0xED, 0x84, 0x00,
  // Bytecodes
  0xEB, 0xD3, 0xE1, 0x63, 0x42, 0x83, 0x9D, 0x9D, 0x9E, 0x00, 0x83, 0xE6, 0x83, 0xCF, 0x8B, 0x49,
  0x6D, 0x83, 0x88, 0x86, 0x9C, 0x9D, 0x86, 0xA6, 0x7C, 0x83, 0xB0, 0x9C, 0xA3, 0x90, 0x91, 0xA6,
  0xA7, 0xA8, 0xA9, 0x83, 0xE6, 0x31, 0x63, 0x83, 0x93, 0x8F, 0x61, 0xA2, 0xA3, 0x82, 0x69, 0xC3,
  0x38, 0xE0, 0x8A, 0x84, 0x83, 0xE6, 0xD9, 0xF7, 0x84, 0xE1, 0x6D, 0x84, 0x8A, 0x94, 0x89, 0xE1,
  0x6D, 0xE1, 0x88, 0x9C, 0xD6, 0x6D, 0xE2, 0xC9, 0x81, 0x6D, 0xE7, 0x38, 0xE0, 0x8A, 0x84, 0xE4,
  0x85, 0x4D, 0xE7, 0x38, 0x62, 0xC8, 0x89, 0xE1, 0x8A, 0xE2, 0xC4, 0x83, 0x83, 0xD0, 0x82, 0xE1,
  0x6D, 0x83, 0x89, 0x94, 0xAE, 0x89, 0xE4, 0x0D, 0x83, 0xD0, 0x82, 0x95, 0x02, 0xC1, 0xC3, 0x83,
  0x81, 0x85, 0x89, 0xD0, 0x91, 0x82, 0x71, 0xC3, 0x83, 0xC9, 0xCA, 0x9D, 0xC1, 0xC8, 0xC3, 0x83,
  0xC1, 0xD4, 0x81, 0x91, 0x82, 0x81, 0x80, 0xC3, 0x83, 0xC9, 0x8A, 0xD0, 0x82, 0x62, 0xC3, 0x83,
  0xC1, 0x82, 0x88, 0xE1, 0x89, 0xE1, 0x0D, 0x83, 0xD0, 0x82, 0x69, 0x82, 0x7C, 0x83, 0xD0, 0x82,
  0x62, 0xD8, 0x89, 0x0D, 0xE2, 0x38, 0x62, 0x44, 0xE2, 0x38, 0xE0, 0x44, 0x8A, 0x84, 0xE1, 0x88,
  0x02, 0x6D, 0xE3, 0x85, 0x83, 0x65, 0xE1, 0x84, 0x22, 0x6D, 0x83, 0xD0, 0x82, 0x91, 0x93, 0x89,
  0x83, 0x89, 0x49, 0x83, 0x83, 0x9F, 0xA0, 0xA1, 0x9C, 0xE1, 0xA1, 0x8A, 0x9F, 0xC3, 0x83, 0x93,
  0x93, 0xCF, 0x8C, 0x8B, 0x61, 0x8C, 0xC3, 0x83, 0x81, 0xDB, 0x69, 0x8C, 0x7C, 0x83, 0x87, 0x86,
  0xB1, 0xC4, 0x6D, 0x83, 0x85, 0x81, 0xA4, 0xCC, 0x6D, 0x83, 0xC1, 0xD4, 0x61, 0x7C, 0x83, 0xC1,
  0xC4, 0x85, 0x61, 0xE1, 0x05, 0x83, 0x9F, 0x86, 0x0C, 0xA1, 0xA1, 0xDD, 0x97, 0x98, 0xC3, 0x83,
  0x8C, 0xE1, 0x8B, 0x61, 0x7C, 0x83, 0xAE, 0xAE, 0x8A, 0xE1, 0x6D, 0x83, 0xB2, 0xE4, 0xA4, 0x81,
  0x80, 0xC3, 0x83, 0x8C, 0xA4, 0xA5, 0x85, 0xAE, 0x6D, 0xD3, 0xE5, 0xC1, 0xC3, 0x83, 0xAC, 0xAC,
  0xAD, 0xAD, 0xA3, 0xA3, 0xC2, 0x0F, 0x84, 0xE3, 0x6D, 0x83, 0xCC, 0xB1, 0xF4, 0x8B, 0xA3, 0xA4,
  0x40, 0x09, 0x40, 0x83, 0x87, 0x86, 0x8E, 0xCD, 0x6D, 0x83, 0x81, 0xDB, 0x62, 0x84, 0xE1, 0x05,
  0x83, 0x87, 0x86, 0x8E, 0x8D, 0x9C, 0xF2, 0x96, 0x97, 0x98, 0xC3, 0x83, 0x81, 0xDB, 0x8C, 0x81,
  0x85, 0xA5, 0xA4, 0x8C, 0xC3, 0x83, 0x92, 0xDB, 0xAE, 0x92, 0xA7, 0x7C, 0x83, 0x9B, 0x9B, 0x88,
  0xE5, 0xC3, 0x83, 0x8D, 0xE4, 0x8E, 0xD6, 0xC3, 0x83, 0x8D, 0xE1, 0x99, 0x99, 0xC7, 0xC8, 0xC3,
  0xD3, 0x84, 0x82, 0xB3, 0xF7, 0x97, 0x97, 0xA9, 0xA9, 0x83, 0xE1, 0x84, 0xE2, 0xF6, 0xE1, 0x03,
  0x83, 0xCD, 0x99, 0xD6, 0x6D, 0x83, 0xCD, 0x8E, 0xD6, 0x88, 0xE2, 0xC3, 0x83, 0xCB, 0xAA, 0x03,
  0x40, 0x09, 0x40, 0xAE, 0x84, 0xE3, 0x6D, 0xC4, 0x8A, 0xE1, 0x89, 0xE2, 0xC8, 0x83, 0xAE, 0x89,
  0xE3, 0x6D, 0x89, 0x80, 0x82, 0xB4, 0x83, 0xE6, 0xE8, 0x81, 0x49, 0x38, 0xE0, 0x94, 0x89, 0x83,
  0xE6, 0xE3, 0x80, 0x91, 0x92, 0x82, 0x81, 0xAF, 0xC3, 0xD3, 0xE1, 0x9D, 0xD1, 0x62, 0xC3, 0xE3,
  0x80, 0x85, 0x84, 0x64, 0x83, 0x91, 0xE1, 0x8F, 0xD1, 0x62, 0xC3, 0xE3, 0xD0, 0x82, 0x81, 0x84,
  0x80, 0xC3, 0x83, 0x93, 0x80, 0x8A, 0x85, 0x61, 0xE2, 0x09, 0xE3, 0xAF, 0xD1, 0x81, 0x92, 0x91,
  0x92, 0x80, 0xD3, 0xE1, 0x85, 0xD1, 0xE2, 0xC3, 0x83, 0x8A, 0x61, 0x38, 0xE0, 0x8A, 0xE2, 0x09,
  0x83, 0xCA, 0x49, 0xE4, 0xF7, 0x84, 0xD3, 0xE1, 0x82, 0xA5, 0x85, 0x62, 0xC3, 0x83, 0x38, 0xE0,
  0x8A, 0xE5, 0x09, 0xE3, 0x9A, 0x9B, 0x9C, 0xE2, 0xC3, 0xE3, 0x9D, 0x81, 0xF4, 0x82, 0xE1, 0xC3,
  0xE3, 0xD0, 0x82, 0x64, 0xE3, 0x9D, 0xD1, 0x62, 0xC4, 0xE3, 0x8F, 0xD1, 0x62, 0x91, 0x91, 0xE3,
  0x9D, 0x85, 0x04, 0x84, 0xE1, 0x05, 0xE3, 0x80, 0x82, 0x94, 0x95, 0x73, 0xE1, 0xCA, 0x85, 0x62,
  0x80, 0x93, 0xC3, 0xE3, 0x82, 0xE2, 0x81, 0x8F, 0xC3, 0xE3, 0xC2, 0xC0, 0xC9, 0x0D, 0xE3, 0x8D,
  0x9C, 0x9C, 0x9B, 0x99, 0x99, 0xC3, 0xE3, 0x82, 0x81, 0x80, 0x64, 0xE3, 0xCC, 0x8F, 0x92, 0x93,
  0xD8, 0x89, 0xE3, 0xC1, 0x93, 0x94, 0x73, 0x93, 0x8A, 0xE2, 0x84, 0x6D, 0x84, 0xE4, 0x6D, 0x38,
  0x89, 0xE2, 0x88, 0x6D, 0xE3, 0xAA, 0xAB, 0x3C, 0x94, 0x0F, 0xFF, 0xFF, 0xFF,
};

extern const mamefont::Font ShapoSansP_s11c09w2a1(ShapoSansP_s11c09w2a1_blob);

#undef MAMEFONT_PROGMEM
