// Generated by MameFont
//   Format Version: 1
//   First Code      : 32
//   Glyph Count     : 95
//   Font Height     : 8 px
//   Max Glyph Width : 5 px
//   Total Pixels    : 3800 px
//   Fragment Shape  : Vertical
//   Bit Order       : LSB First
//   Shrinked Format : Yes
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  190 Bytes (2 Bytes/glyph)
//     Lookup Table  :   64 Bytes (100.00% used)
//     Bytecodes     :  427 Bytes (4.49 Bytes/glyph)
//     Total         :  689 Bytes (7.25 Bytes/glyph)
//   Compression Performance:
//     CPY         :   57 -->   27 (  -6.32%)
//     LDI         :    8 -->   16 (  +1.68%)
//     LUD (step=0):   28 -->   14 (  -2.95%)
//     LUD (step=1):   56 -->   28 (  -5.89%)
//     LUP         :  247 -->  247 (  +0.00%)
//     RPT         :   52 -->   24 (  -5.89%)
//     SFT         :   17 -->    8 (  -1.89%)
//     XOR         :   10 -->   10 (  +0.00%)
//     Total       :  475 -->  374 ( -21.26%)
//   Memory Efficiency:  5.515 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t ShapoSansMono_s08c07_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0xA0, 0x20, 0x5E, 0x3F, 0x07, 0x09, 0x04,
  // Glyph Table
  0x00, 0x54, 0x01, 0x54, 0x03, 0x54, 0x05, 0x54, 0x07, 0x54, 0x0A, 0x54, 0x0D, 0x54, 0x10, 0x54,
  0x12, 0x54, 0x15, 0x54, 0x17, 0x54, 0x19, 0x54, 0x1B, 0x54, 0x1D, 0x54, 0x1F, 0x54, 0x21, 0x54,
  0x22, 0x54, 0x24, 0x54, 0x26, 0x54, 0x28, 0x54, 0x2B, 0x54, 0x2E, 0x54, 0x30, 0x54, 0x33, 0x54,
  0x36, 0x54, 0x38, 0x54, 0x3B, 0x54, 0x3D, 0x54, 0x3F, 0x54, 0x42, 0x54, 0x44, 0x54, 0x47, 0x54,
  0x4A, 0x54, 0x4C, 0x54, 0x4E, 0x54, 0x50, 0x54, 0x52, 0x54, 0x54, 0x54, 0x56, 0x54, 0x58, 0x54,
  0x5A, 0x54, 0x5C, 0x54, 0x5E, 0x54, 0x60, 0x54, 0x62, 0x54, 0x64, 0x54, 0x66, 0x54, 0x69, 0x54,
  0x6B, 0x54, 0x6D, 0x54, 0x70, 0x54, 0x73, 0x54, 0x76, 0x54, 0x78, 0x54, 0x7A, 0x54, 0x7C, 0x54,
  0x7F, 0x54, 0x81, 0x54, 0x83, 0x54, 0x85, 0x54, 0x87, 0x54, 0x88, 0x54, 0x8A, 0x54, 0x8C, 0x54,
  0x8D, 0x54, 0x8F, 0x54, 0x91, 0x54, 0x93, 0x54, 0x95, 0x54, 0x97, 0x54, 0x99, 0x54, 0x9D, 0x54,
  0xA0, 0x54, 0xA2, 0x54, 0xA5, 0x54, 0xA8, 0x54, 0xAB, 0x54, 0xAD, 0x54, 0xAF, 0x54, 0xB1, 0x54,
  0xB3, 0x54, 0xB5, 0x54, 0xB7, 0x54, 0xB9, 0x54, 0xBB, 0x54, 0xBD, 0x54, 0xC0, 0x54, 0xC2, 0x54,
  0xC4, 0x54, 0xC6, 0x54, 0xC9, 0x54, 0xCC, 0x54, 0xCE, 0x54, 0xD0, 0x54, 0xD2, 0x54,
  // Lookup Table
  0x3E, 0x41, 0x7F, 0x08, 0x04, 0x78, 0x38, 0x44, 0x28, 0x61, 0x51, 0x49, 0x45, 0x30, 0x40, 0x3F,
  0x16, 0x11, 0x14, 0x00, 0x22, 0x1C, 0x36, 0x09, 0x06, 0x18, 0x60, 0x2A, 0x10, 0x20, 0x54, 0x4C,
  0x4A, 0x19, 0x29, 0x46, 0x24, 0x7C, 0x43, 0x33, 0x05, 0x03, 0x59, 0x5F, 0x26, 0x50, 0x4B, 0x31,
  0xA6, 0x66, 0x21, 0x7D, 0xFC, 0x77, 0xA0, 0x42, 0x27, 0x39, 0x07, 0x0E, 0x5D, 0x1E, 0x4E, 0x7A,
  // Bytecodes
  0xE4, 0xFF, 0x93, 0xAB, 0x62, 0xFF, 0x93, 0xA9, 0x93, 0x41, 0x94, 0x82, 0x94, 0x41, 0x84, 0x9B,
  0x82, 0x9B, 0x9C, 0xFF, 0xA6, 0xA7, 0x83, 0xB1, 0x89, 0xFF, 0x96, 0x8B, 0xAA, 0xAC, 0xAD, 0xFF,
  0x93, 0xA8, 0xA9, 0x51, 0x93, 0x80, 0x82, 0x81, 0x93, 0xFF, 0x93, 0xD1, 0x80, 0x93, 0x92, 0x83,
  0x80, 0x69, 0xC3, 0x80, 0x49, 0xFF, 0x93, 0xB6, 0x9A, 0x51, 0x93, 0x83, 0xE1, 0x93, 0x93, 0x9A,
  0x62, 0xFF, 0x35, 0x26, 0x80, 0xDA, 0x8C, 0x80, 0x93, 0xF1, 0x82, 0x51, 0xB7, 0xD9, 0x8B, 0xA3,
  0xB2, 0x8B, 0xF2, 0xAE, 0xAF, 0xFF, 0x99, 0x90, 0x91, 0x82, 0x9C, 0xFF, 0xB8, 0x8C, 0xE1, 0xB9,
  0x86, 0x9F, 0xA0, 0x8B, 0x8D, 0xFF, 0xA9, 0xF1, 0x89, 0xA1, 0xBA, 0xFF, 0x96, 0x8B, 0xE1, 0x96,
  0x98, 0x8B, 0xA2, 0xA1, 0xBB, 0xFF, 0x93, 0xB1, 0x62, 0xFF, 0x93, 0xB0, 0xB1, 0x51, 0x83, 0x95,
  0x96, 0x94, 0x93, 0xFF, 0x93, 0x92, 0xE1, 0x93, 0x93, 0x94, 0x96, 0x95, 0x83, 0xFF, 0xF1, 0xA9,
  0xAA, 0xAB, 0x98, 0xFF, 0xD0, 0xBC, 0x8A, 0xBD, 0x85, 0x90, 0x91, 0x69, 0x82, 0xCB, 0xBE, 0x8D,
  0xD0, 0xE1, 0x94, 0xFF, 0x82, 0xC1, 0x94, 0x95, 0x82, 0x8B, 0xE1, 0x81, 0x82, 0x97, 0xE1, 0xF3,
  0xD0, 0x8B, 0xA2, 0xBF, 0xD2, 0xE1, 0x82, 0xFF, 0x93, 0xD1, 0x69, 0xFF, 0xDD, 0xE1, 0x8F, 0xFF,
  0xD2, 0x92, 0x94, 0x81, 0x82, 0x8E, 0xE2, 0xFF, 0x82, 0x98, 0x99, 0x69, 0x82, 0x98, 0x83, 0x8D,
  0x82, 0xFF, 0xD0, 0xE1, 0x80, 0xFF, 0x82, 0x97, 0xE1, 0x98, 0xD0, 0xAA, 0xB2, 0x60, 0x5E, 0xFF,
  0x82, 0x97, 0xA1, 0xA2, 0xA3, 0xFF, 0x94, 0x8C, 0x8B, 0x8A, 0x94, 0xFF, 0xF0, 0xE0, 0x82, 0x49,
  0x8F, 0x8E, 0xE1, 0x8F, 0xBA, 0x99, 0x9A, 0x69, 0x60, 0x1F, 0x9A, 0x95, 0x69, 0xFF, 0x81, 0x96,
  0x83, 0x69, 0xA9, 0xD4, 0x69, 0xFF, 0xD9, 0xDB, 0xA6, 0xFF, 0x93, 0xC2, 0xC1, 0xFF, 0x15, 0x06,
  0xC1, 0xC2, 0x93, 0xFF, 0x84, 0x21, 0x69, 0xFF, 0x8E, 0xE3, 0xE1, 0x11, 0x98, 0xFF, 0x9D, 0x9E,
  0xE1, 0x85, 0x82, 0xA4, 0xC7, 0x86, 0xD6, 0xE1, 0x93, 0xFF, 0xD6, 0x87, 0xA4, 0x82, 0x86, 0x9E,
  0xE1, 0x99, 0x83, 0x60, 0x7E, 0x97, 0x97, 0x60, 0x0A, 0xFF, 0x99, 0xA4, 0xF7, 0xE0, 0xA5, 0xFF,
  0xD2, 0xC4, 0x85, 0xFF, 0x93, 0x87, 0xB3, 0x8E, 0x93, 0xFF, 0x8E, 0x00, 0xF2, 0xB3, 0x93, 0xFF,
  0x82, 0x9C, 0x9C, 0x88, 0x87, 0xFF, 0x93, 0xF0, 0x82, 0x51, 0xA5, 0xD4, 0x41, 0xFF, 0xA5, 0xD3,
  0xD4, 0xFF, 0xD6, 0xE1, 0x86, 0xFF, 0xB4, 0x88, 0xC7, 0x86, 0xD6, 0xD7, 0xB4, 0xFF, 0xA5, 0xD3,
  0x61, 0xFF, 0x83, 0x9E, 0xE1, 0x9D, 0x84, 0x80, 0xC7, 0x9D, 0x60, 0x3C, 0xCE, 0x9D, 0xA5, 0xFF,
  0x60, 0x0C, 0xDD, 0x69, 0x95, 0x9A, 0x99, 0x69, 0xD7, 0x9C, 0x69, 0xFF, 0x95, 0x9D, 0xB6, 0x60,
  0x90, 0xA5, 0x87, 0xF5, 0x9E, 0x9F, 0x87, 0xFF, 0x83, 0x80, 0xB5, 0xC1, 0xE1, 0x60, 0xFF, 0x49,
  0xC1, 0xB5, 0x80, 0x83, 0xD3, 0x01, 0x83, 0xFF, 0xFF, 0xFF, 0xFF,
};

extern const mamefont::Font ShapoSansMono_s08c07(ShapoSansMono_s08c07_blob);

#undef MAMEFONT_PROGMEM
