// Generated by MameFont
//   Format Version: 1
//   First Code      : 46
//   Glyph Count     : 25
//   Font Height     : 40 px
//   Max Glyph Width : 30 px
//   Total Pixels    : 19480 px
//   Fragment Shape  : Vertical
//   Bit Order       : LSB First
//   Shrinked Format : No
//   Estimated Footprint:
//     Header        :    8 Bytes
//     Glyph Table   :  100 Bytes (4 Bytes/glyph)
//     Lookup Table  :   26 Bytes (40.62% used)
//     Bytecodes     :  618 Bytes (24.72 Bytes/glyph)
//     Total         :  752 Bytes (30.08 Bytes/glyph)
//   Compression Performance:
//     CPX         :  548 -->   93 ( -18.69%)
//     CPY         :  210 -->   50 (  -6.57%)
//     LUD (step=0):   12 -->    6 (  -0.25%)
//     LUD (step=1):  126 -->   63 (  -2.59%)
//     LUP         :  158 -->  158 (  +0.00%)
//     RPT         : 1167 -->  148 ( -41.85%)
//     SFT         :  189 -->   72 (  -4.80%)
//     XOR         :   25 -->   25 (  +0.00%)
//     Total       : 2435 -->  615 ( -74.74%)
//   Memory Efficiency: 25.904 px/Byte

#include <stdint.h>
#include <mamefont/mamefont.hpp>

#ifdef MAMEFONT_USE_PROGMEM
#include <avr/pgmspace.h>
#define MAMEFONT_PROGMEM PROGMEM
#else
#define MAMEFONT_PROGMEM
#endif

const uint8_t MameSeg7_s40c38w06_blob[] MAMEFONT_PROGMEM = {
  // Font Header
  0x01, 0x80, 0x2E, 0x18, 0x19, 0x27, 0x08, 0x1D,
  // Glyph Table
  0x00, 0x00, 0x06, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x00, 0x1D, 0x10, 0x2E, 0x00, 0x1D, 0x10,
  0x4B, 0x00, 0x1D, 0x10, 0x78, 0x00, 0x1D, 0x10, 0x9F, 0x00, 0x1D, 0x10, 0xC5, 0x00, 0x1D, 0x10,
  0xF1, 0x00, 0x1D, 0x10, 0x1C, 0x01, 0x1D, 0x10, 0x3E, 0x01, 0x1D, 0x10, 0x66, 0x01, 0x1D, 0x10,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x93, 0x01, 0x1D, 0x10,
  0xB7, 0x01, 0x1D, 0x10, 0xDE, 0x01, 0x1D, 0x10, 0xFB, 0x01, 0x1D, 0x10, 0x23, 0x02, 0x1D, 0x10,
  0x48, 0x02, 0x1D, 0x10,
  // Lookup Table
  0xE0, 0xF0, 0xE6, 0xCF, 0x9F, 0xE1, 0xF3, 0xCC, 0x9E, 0x03, 0x19, 0x3C, 0x3F, 0x00, 0xF8, 0x78,
  0x1E, 0x0C, 0x7C, 0xFF, 0x07, 0x06, 0x0F, 0xFC, 0x18, 0xC0,
  // Bytecodes
  0xEB, 0xEF, 0x8F, 0x97, 0x97, 0x63, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE5, 0x40, 0x14, 0x4C, 0x8E,
  0x3B, 0xF7, 0x2D, 0xE7, 0x8F, 0x40, 0x16, 0x06, 0xE4, 0xD5, 0x61, 0x99, 0x01, 0xE4, 0x77, 0x61,
  0x40, 0x3B, 0x1C, 0xE4, 0x11, 0xD9, 0x8B, 0xF1, 0x8C, 0xE4, 0x77, 0x89, 0x22, 0xE5, 0xE1, 0xEF,
  0x33, 0x61, 0x8D, 0xE6, 0xEE, 0x8F, 0x93, 0xE3, 0x40, 0x1E, 0x94, 0x31, 0xD5, 0x61, 0x8D, 0xE6,
  0xEE, 0x92, 0x93, 0xE3, 0x89, 0x8D, 0xEA, 0xEC, 0x11, 0x62, 0xE6, 0xE4, 0x95, 0x96, 0x11, 0xE8,
  0x31, 0x82, 0xC1, 0x80, 0x8D, 0xE6, 0xEE, 0x8F, 0x93, 0xE3, 0x94, 0x2A, 0xE3, 0xD0, 0x61, 0xD7,
  0x8C, 0xE8, 0x90, 0x91, 0x28, 0xC9, 0x21, 0xE5, 0x8E, 0x3B, 0xF7, 0x2D, 0xE5, 0xEF, 0x11, 0xD9,
  0x8B, 0xF1, 0x8C, 0xE3, 0x66, 0x98, 0x8D, 0xE9, 0xE4, 0x95, 0x96, 0x11, 0xE8, 0x31, 0x82, 0xC1,
  0x80, 0x8D, 0xE6, 0xEE, 0x8F, 0x93, 0xE3, 0x94, 0x2A, 0xE7, 0x91, 0x90, 0x8C, 0xE8, 0x88, 0x87,
  0xD5, 0x61, 0x40, 0x3B, 0x24, 0x98, 0x8B, 0xF1, 0x8C, 0xE3, 0x66, 0x8A, 0xC9, 0x21, 0xE6, 0xE1,
  0xD0, 0x81, 0x03, 0xE5, 0x40, 0x14, 0x4C, 0x8E, 0x3B, 0xF7, 0x2D, 0xE7, 0x8F, 0x40, 0x16, 0x06,
  0xE4, 0x11, 0x61, 0x91, 0x90, 0x8C, 0xE8, 0x88, 0x87, 0xD5, 0x61, 0x8D, 0xEE, 0x40, 0x3B, 0x0C,
  0xE6, 0xEF, 0x11, 0x65, 0xE3, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE8, 0x21, 0x95, 0x8D, 0xE8, 0x8E,
  0x3B, 0xF7, 0x2D, 0xE5, 0xEF, 0x11, 0x61, 0x91, 0x90, 0x8C, 0xE8, 0x88, 0x87, 0x80, 0x40, 0x57,
  0x48, 0xED, 0x8F, 0x40, 0x51, 0x06, 0xE7, 0x98, 0x8B, 0xF1, 0x8C, 0xE3, 0x66, 0x8A, 0xC9, 0x21,
  0xE6, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE8, 0x21, 0x95, 0x8D, 0xE8, 0x8E, 0x3B, 0xF7, 0x2D, 0xE5,
  0xEF, 0xD5, 0x61, 0xD7, 0x8C, 0xE3, 0x66, 0xD0, 0x61, 0x40, 0x3B, 0x0C, 0xE6, 0x8F, 0x40, 0x16,
  0x06, 0xE4, 0x11, 0xD9, 0x8B, 0xF1, 0x8C, 0xE4, 0x77, 0x89, 0x22, 0xE5, 0xE1, 0xD0, 0xD1, 0xD3,
  0x8C, 0xE5, 0x40, 0x14, 0x4C, 0x8E, 0x3B, 0xF7, 0x2D, 0xE7, 0x8F, 0x40, 0x16, 0x06, 0xE4, 0x11,
  0x62, 0xEA, 0x31, 0xD5, 0x61, 0x8D, 0xEE, 0x40, 0x3B, 0x10, 0xEE, 0x40, 0x4D, 0x0C, 0xE1, 0xD0,
  0xD1, 0xD3, 0x8C, 0xE5, 0x40, 0x14, 0x4C, 0x8E, 0x3B, 0xF7, 0x2D, 0xE7, 0x8F, 0x40, 0x16, 0x06,
  0xE4, 0xD5, 0x61, 0xD7, 0x8C, 0xE4, 0x77, 0x61, 0x40, 0x3B, 0x1C, 0xE4, 0x11, 0xD9, 0x8B, 0xF1,
  0x8C, 0xE4, 0x77, 0x89, 0x22, 0xE5, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE5, 0x40, 0x14, 0x4C, 0x8E,
  0x3B, 0xF7, 0x2D, 0xE7, 0x8F, 0x40, 0x16, 0x06, 0xE4, 0x11, 0x61, 0x91, 0x90, 0x8C, 0xE8, 0x88,
  0x87, 0xD5, 0x61, 0x8D, 0xEE, 0x40, 0x3B, 0x0C, 0xE7, 0x98, 0x8B, 0xF1, 0x8C, 0xE3, 0x66, 0x8A,
  0xC9, 0x21, 0xE6, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE5, 0x40, 0x14, 0x4C, 0x8E, 0x3B, 0xF7, 0x2D,
  0xE7, 0x8F, 0x40, 0x16, 0x06, 0xE4, 0xD5, 0x61, 0xD7, 0x8C, 0xE4, 0x77, 0x61, 0x40, 0x3B, 0x1C,
  0xE4, 0x11, 0x62, 0xE6, 0x77, 0x62, 0xE6, 0xE1, 0xD0, 0x81, 0x03, 0xE6, 0xEE, 0x8E, 0x3B, 0xF7,
  0x2D, 0xE5, 0xEF, 0xD5, 0x61, 0xD7, 0x8C, 0xE3, 0x66, 0xD0, 0x61, 0x40, 0x3B, 0x0C, 0xE6, 0x8F,
  0x40, 0x16, 0x06, 0xE4, 0x11, 0xD9, 0x8B, 0xF1, 0x8C, 0xE4, 0x77, 0x89, 0x22, 0xE5, 0xEC, 0xEF,
  0xEF, 0xEF, 0xD0, 0x61, 0xD7, 0x8C, 0xE8, 0x90, 0x91, 0x8D, 0xE9, 0x8E, 0x3B, 0xF7, 0x2D, 0xE5,
  0xEF, 0x11, 0xD9, 0x8B, 0xF1, 0x8C, 0xE3, 0x66, 0x98, 0x8D, 0xE9, 0xE1, 0xEF, 0x33, 0x61, 0x8D,
  0xE6, 0xEE, 0x8F, 0x93, 0xE3, 0x94, 0x2A, 0x40, 0x25, 0x44, 0xD7, 0x8C, 0xE3, 0x66, 0xD5, 0x61,
  0x8D, 0xE5, 0x8E, 0x3B, 0xF7, 0x2F, 0x40, 0x3B, 0x10, 0x11, 0xD9, 0x8B, 0xF1, 0x8C, 0xE4, 0x77,
  0x89, 0x22, 0xE5, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE8, 0x21, 0x95, 0x8D, 0xE8, 0x8E, 0x3B, 0xF7,
  0x2D, 0xE5, 0xEF, 0xD5, 0x61, 0xD7, 0x8C, 0xE8, 0x90, 0x91, 0x8D, 0x40, 0x3B, 0x24, 0x11, 0xD9,
  0x8B, 0xF1, 0x8C, 0xE3, 0x66, 0x98, 0x8D, 0xE9, 0xE1, 0xD0, 0xD1, 0xD3, 0x8C, 0xE8, 0x21, 0x95,
  0x8D, 0xE8, 0x8E, 0x3B, 0xF7, 0x2D, 0xE5, 0xEF, 0xD5, 0x61, 0xD7, 0x8C, 0xE8, 0x90, 0x91, 0x8D,
  0x40, 0x3B, 0x24, 0x11, 0x62, 0xE9, 0xEE, 0xFF, 0xFF, 0xFF,
};

extern const mamefont::Font MameSeg7_s40c38w06(MameSeg7_s40c38w06_blob);

#undef MAMEFONT_PROGMEM
